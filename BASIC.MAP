
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               A00  0000097D  progbits  resSeg
            1AA3               A00               A00  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 97D
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  A00
align:                    1
follows:   resSeg
vstart:                1AA3
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              B1              1154  mainLoop
              CD              1170  mainLoop.ml0
              DC              117F  mainLoop.ml1
              EB              118E  mainLoop.saveLine
             119              11BC  mainLoop.commonProc
             133              11D6  mainLoop.lineDoesntExist
             13A              11DD  criticalError
             144              11E7  getLineInput
             161              1204  getLineInput.getChar
             17D              1220  getLineInput.glibspace
             1A6              1249  getLineInput.gliCheckCase
             1B5              1258  getLineInput.gliccStore
             1BE              1261  getLineInput.gliExtendedChar
             1C0              1263  getLineInput.gliExit
             1D0              1273  getLineInput.gliFull
             1DC              127F  ttyOutChar
             1E1              1284  ttyOutString
             1E9              128C  ttyIn
             1EE              1291  ttyClear
             207              12AA  executeExpression
             218              12BB  executeExpression.functionFinderLoop
             23C              12DF  executeExpression.functionFound
             250              12F3  executeExpression.exit
             251              12F4  executeExpression.variableAssignment
             294              1337  executeExpression.stringAssignment
             2B7              135A  executeExpression.syntaxError
             2C3              1366  executeExpression.typError
             2CF              1372  spaceSkip
             2D9              137C  spaceSkip.exit
             2DA              137D  getVarNameLength
             2E8              138B  getVarNameLength.search
             2FF              13A2  getVarNameLength.exit
             307              13AA  getVarType
             31E              13C1  getVarType.exit
             322              13C5  handleAlgebraicExpression
             32D              13D0  handleAlgebraicExpression.hae0
             338              13DB  handleAlgebraicExpression.hae1
             348              13EB  handleAlgebraicExpression.hae2
             353              13F6  handleAlgebraicExpression.relationals
             370              1413  handleAlgebraicExpression.handleSecondLevel
             375              1418  handleAlgebraicExpression.parseAdditiveOperators
             389              142C  handleAlgebraicExpression.processAdd
             38F              1432  handleAlgebraicExpression.processMinus
             39A              143D  handleAlgebraicExpression.handleFirstLevelSkip
             39D              1440  handleAlgebraicExpression.handleFirstLevel
             3A2              1445  handleAlgebraicExpression.parseProductOperators
             3B8              145B  handleAlgebraicExpression.processDiv
             3CB              146E  handleAlgebraicExpression.handleZerothLevelSkip
             3CE              1471  handleAlgebraicExpression.handleZerothLevel
             3E4              1487  handleAlgebraicExpression.notBracket
             3E8              148B  handleAlgebraicExpression.varConstCheck
             3F9              149C  handleAlgebraicExpression.varOrRNDFound
             415              14B8  handleAlgebraicExpression.exit
             416              14B9  handleAlgebraicExpression.exponentFound
             418              14BB  handleAlgebraicExpression.varFound
             42F              14D2  handleAlgebraicExpression.closeBracket
             437              14DA  handleAlgebraicExpression.error
             443              14E6  getNumericVariable
             463              1506  getNumericVariable.exit
             467              150A  getNumericVariable.noVar
             46B              150E  getNumericVariable.stringFoundError
             477              151A  setNumericVariable
             497              153A  setNumericVariable.exit
             49B              153E  setNumericVariable.makeEditInteger
             4A2              1545  setNumericVariable.stringFoundError
             4AE              1551  setStringVariable
             4BB              155E  findOtherExpressionsOnLine
             4C4              1567  findOtherExpressionsOnLine.exit
             4C5              1568  funTbl
             51C              15BF  oldSchoolAssignemnt
             52C              15CF  newProgram
             580              1623  listProgram
             583              1626  runProgram
             586              1629  printStatement
             58C              162F  printStatement.printStart
             5A2              1645  printStatement.printExpr
             5A5              1648  printStatement.printExpr1
             5BC              165F  printStatement.printStringVar
             5E9              168C  printStatement.stringPrint
             601              16A4  printStatement.psvexit
             60E              16B1  printStatement.closespeechmarks
             615              16B8  printStatement.continue
             61D              16C0  getInput
             620              16C3  handleIf
             623              16C6  fancyJmp
             626              16C9  returnToDOS
             629              16CC  forLoop
             62C              16CF  cls
             631              16D4  dbgr
             634              16D7  decimalToHex
             639              16DC  decimalToHex.processDigits
             655              16F8  decimalToHex.exit
             65C              16FF  printdecimalword
             68C              172F  printdecimalword.pdw0
             69C              173F  printdecimalword.pdw1
             6B5              1758  allocateBlock
             6E7              178A  allocateBlock.exit
             6E9              178C  allocateBlock.memoryFull
             6F5              1798  allocateBlock.firstAllocation
             714              17B7  findVariable
             729              17CC  findVariable.search
             735              17D8  findVariable.invalid
             744              17E7  findVariable.varFound
             753              17F6  findVariable.datFound
             765              1808  findVariable.varNotFound
             76F              1812  findVariable.exit
             775              1818  findFirstLine
             784              1827  searchForProgramLine
             794              1837  searchForProgramLine.search
             7A6              1849  searchForProgramLine.lineFound
             7A7              184A  insertProgramLine
             7CA              186D  insertProgramLine.walk
             7DE              1881  insertProgramLine.candidate
             7ED              1890  insertProgramLine.sort
             800              18A3  insertProgramLine.skipLink
             80E              18B1  insertProgramLine.first
             820              18C3  insertProgramLine.exit
             826              18C9  makeEditInteger
             839              18DC  makeEditInteger.newVar
             865              1908  makeEditInteger.error
             871              1914  makeEditString
             8AB              194E  makeEditString.strcopy
             8BF              1962  makeEditString.error
             8CB              196E  terminatedstrcpy
             8CC              196F  terminatedstrcpy.copy
             8DC              197F  terminatedstrcpy.exit
             8DE              1981  strcpy
             8E7              198A  strlen
             8EB              198E  strlen.search
             8F2              1995  strlen.exit
             8F5              1998  memoryDetection
             8FE              19A1  memoryDetection.findStartAddr
             905              19A8  memoryDetection.fsa1
             935              19D8  memoryDetection.exit
             936              19D9  memoryDetection.worstCase
             957              19FA  prompt
             95C              19FF  mainmsg
             970              1A13  bytemsg
             97E              1A21  crlf
             981              1A24  errmsg
             989              1A2C  numbers
             993              1A36  varChrs
             9B9              1A5C  noMem
             9C9              1A6C  syntax
             9D8              1A7B  typeError
             9E8              1A8B  lineNoXist

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             A00              1AA3  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


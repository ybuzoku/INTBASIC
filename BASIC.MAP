
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               A0F  0000098C  progbits  resSeg
            1AB2               A0F               A0F  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 98C
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  A0F
align:                    1
follows:   resSeg
vstart:                1AB2
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              B1              1154  mainLoop
              CD              1170  mainLoop.ml0
              DC              117F  mainLoop.ml1
              EB              118E  mainLoop.saveLine
             119              11BC  mainLoop.commonProc
             133              11D6  mainLoop.lineDoesntExist
             13A              11DD  criticalError
             144              11E7  getLineInput
             161              1204  getLineInput.getChar
             17D              1220  getLineInput.glibspace
             1A6              1249  getLineInput.gliCheckCase
             1B5              1258  getLineInput.gliccStore
             1BE              1261  getLineInput.gliExtendedChar
             1C0              1263  getLineInput.gliExit
             1D0              1273  getLineInput.gliFull
             1DC              127F  ttyOutChar
             1E1              1284  ttyOutString
             1E9              128C  ttyIn
             1EE              1291  ttyClear
             207              12AA  executeExpression
             218              12BB  executeExpression.functionFinderLoop
             23C              12DF  executeExpression.functionFound
             250              12F3  executeExpression.exit
             251              12F4  executeExpression.variableAssignment
             294              1337  executeExpression.stringAssignment
             2B7              135A  executeExpression.syntaxError
             2C3              1366  executeExpression.typError
             2CF              1372  spaceSkip
             2D9              137C  spaceSkip.exit
             2DA              137D  getVarNameLength
             2E8              138B  getVarNameLength.search
             2FF              13A2  getVarNameLength.exit
             307              13AA  getVarType
             31E              13C1  getVarType.exit
             322              13C5  handleAlgebraicExpression
             32D              13D0  handleAlgebraicExpression.hae0
             338              13DB  handleAlgebraicExpression.hae1
             348              13EB  handleAlgebraicExpression.hae2
             353              13F6  handleAlgebraicExpression.relationals
             370              1413  handleAlgebraicExpression.handleSecondLevel
             375              1418  handleAlgebraicExpression.parseAdditiveOperators
             389              142C  handleAlgebraicExpression.processAdd
             38F              1432  handleAlgebraicExpression.processMinus
             39A              143D  handleAlgebraicExpression.handleFirstLevelSkip
             39D              1440  handleAlgebraicExpression.handleFirstLevel
             3A2              1445  handleAlgebraicExpression.parseProductOperators
             3B8              145B  handleAlgebraicExpression.processDiv
             3CB              146E  handleAlgebraicExpression.handleZerothLevelSkip
             3CE              1471  handleAlgebraicExpression.handleZerothLevel
             3E4              1487  handleAlgebraicExpression.notBracket
             3E8              148B  handleAlgebraicExpression.varConstCheck
             3F9              149C  handleAlgebraicExpression.varOrRNDFound
             415              14B8  handleAlgebraicExpression.exit
             416              14B9  handleAlgebraicExpression.exponentFound
             418              14BB  handleAlgebraicExpression.varFound
             42F              14D2  handleAlgebraicExpression.closeBracket
             437              14DA  handleAlgebraicExpression.error
             443              14E6  getNumericVariable
             463              1506  getNumericVariable.exit
             467              150A  getNumericVariable.noVar
             46B              150E  getNumericVariable.stringFoundError
             477              151A  setNumericVariable
             497              153A  setNumericVariable.exit
             49B              153E  setNumericVariable.makeEditInteger
             4A2              1545  setNumericVariable.stringFoundError
             4AE              1551  setStringVariable
             4BB              155E  findOtherExpressionsOnLine
             4C4              1567  findOtherExpressionsOnLine.exit
             4C5              1568  funTbl
             51C              15BF  oldSchoolAssignemnt
             52C              15CF  newProgram
             58E              1631  listProgram
             591              1634  runProgram
             594              1637  printStatement
             59A              163D  printStatement.printStart
             5B0              1653  printStatement.printExpr
             5B3              1656  printStatement.printExpr1
             5CA              166D  printStatement.printStringVar
             5F7              169A  printStatement.stringPrint
             60F              16B2  printStatement.psvexit
             61C              16BF  printStatement.closespeechmarks
             623              16C6  printStatement.continue
             62B              16CE  getInput
             62E              16D1  handleIf
             631              16D4  fancyJmp
             634              16D7  returnToDOS
             637              16DA  forLoop
             63A              16DD  cls
             63F              16E2  dbgr
             642              16E5  decimalToHex
             647              16EA  decimalToHex.processDigits
             663              1706  decimalToHex.exit
             66A              170D  printdecimalword
             69A              173D  printdecimalword.pdw0
             6AA              174D  printdecimalword.pdw1
             6C3              1766  allocateBlock
             6C4              1767  allocateBlock.ab0
             6F5              1798  allocateBlock.exit
             6F7              179A  allocateBlock.memoryFull
             703              17A6  allocateBlock.firstAllocation
             723              17C6  findVariable
             738              17DB  findVariable.search
             744              17E7  findVariable.invalid
             753              17F6  findVariable.varFound
             762              1805  findVariable.datFound
             774              1817  findVariable.varNotFound
             77E              1821  findVariable.exit
             784              1827  findFirstLine
             793              1836  searchForProgramLine
             7A3              1846  searchForProgramLine.search
             7B5              1858  searchForProgramLine.lineFound
             7B6              1859  insertProgramLine
             7D9              187C  insertProgramLine.walk
             7ED              1890  insertProgramLine.candidate
             7FC              189F  insertProgramLine.sort
             80F              18B2  insertProgramLine.skipLink
             81D              18C0  insertProgramLine.first
             82F              18D2  insertProgramLine.exit
             835              18D8  makeEditInteger
             848              18EB  makeEditInteger.newVar
             874              1917  makeEditInteger.error
             880              1923  makeEditString
             8BA              195D  makeEditString.strcopy
             8CE              1971  makeEditString.error
             8DA              197D  terminatedstrcpy
             8DB              197E  terminatedstrcpy.copy
             8EB              198E  terminatedstrcpy.exit
             8ED              1990  strcpy
             8F6              1999  strlen
             8FA              199D  strlen.search
             901              19A4  strlen.exit
             904              19A7  memoryDetection
             90D              19B0  memoryDetection.findStartAddr
             914              19B7  memoryDetection.fsa1
             944              19E7  memoryDetection.exit
             945              19E8  memoryDetection.worstCase
             966              1A09  prompt
             96B              1A0E  mainmsg
             97F              1A22  bytemsg
             98D              1A30  crlf
             990              1A33  errmsg
             998              1A3B  numbers
             9A2              1A45  varChrs
             9C8              1A6B  noMem
             9D8              1A7B  syntax
             9E7              1A8A  typeError
             9F7              1A9A  lineNoXist

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             A0F              1AB2  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


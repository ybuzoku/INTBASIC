
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               A22  0000099F  progbits  resSeg
            1AC5               A22               A22  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 99F
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  A22
align:                    1
follows:   resSeg
vstart:                1AC5
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              B1              1154  mainLoop
              CD              1170  mainLoop.ml0
              DC              117F  mainLoop.ml1
              EB              118E  mainLoop.saveLine
             119              11BC  mainLoop.commonProc
             133              11D6  mainLoop.lineDoesntExist
             13A              11DD  criticalError
             144              11E7  getLineInput
             161              1204  getLineInput.getChar
             17D              1220  getLineInput.glibspace
             1A6              1249  getLineInput.gliCheckCase
             1B5              1258  getLineInput.gliccStore
             1BE              1261  getLineInput.gliExtendedChar
             1C0              1263  getLineInput.gliExit
             1D0              1273  getLineInput.gliFull
             1DC              127F  ttyOutChar
             1E1              1284  ttyOutString
             1E9              128C  ttyIn
             1EE              1291  ttyClear
             207              12AA  executeExpression
             218              12BB  executeExpression.functionFinderLoop
             23C              12DF  executeExpression.functionFound
             250              12F3  executeExpression.exit
             251              12F4  executeExpression.variableAssignment
             294              1337  executeExpression.stringAssignment
             2BA              135D  executeExpression.syntaxError
             2C6              1369  executeExpression.typError
             2D2              1375  spaceSkip
             2DC              137F  spaceSkip.exit
             2DD              1380  getVarNameLength
             2EB              138E  getVarNameLength.search
             302              13A5  getVarNameLength.exit
             30A              13AD  getVarType
             321              13C4  getVarType.exit
             325              13C8  handleAlgebraicExpression
             330              13D3  handleAlgebraicExpression.hae0
             33B              13DE  handleAlgebraicExpression.hae1
             34B              13EE  handleAlgebraicExpression.hae2
             356              13F9  handleAlgebraicExpression.relationals
             378              141B  handleAlgebraicExpression.parseAdditiveOperators
             38C              142F  handleAlgebraicExpression.processAdd
             392              1435  handleAlgebraicExpression.processMinus
             39D              1440  handleAlgebraicExpression.handleSecondLevelSkip
             3A0              1443  handleAlgebraicExpression.handleSecondLevel
             3A5              1448  handleAlgebraicExpression.parseProductOperators
             3BB              145E  handleAlgebraicExpression.processDiv
             3CE              1471  handleAlgebraicExpression.handleThirdLevelSkip
             3D1              1474  handleAlgebraicExpression.handleThirdLevel
             3E7              148A  handleAlgebraicExpression.notBracket
             3EB              148E  handleAlgebraicExpression.varConstCheck
             3FC              149F  handleAlgebraicExpression.varOrRNDFound
             418              14BB  handleAlgebraicExpression.exit
             419              14BC  handleAlgebraicExpression.exponentFound
             41B              14BE  handleAlgebraicExpression.varFound
             432              14D5  handleAlgebraicExpression.closeBracket
             43A              14DD  handleAlgebraicExpression.error
             446              14E9  getNumericVariable
             466              1509  getNumericVariable.exit
             46A              150D  getNumericVariable.noVar
             46E              1511  getNumericVariable.stringFoundError
             47A              151D  setNumericVariable
             49A              153D  setNumericVariable.exit
             49E              1541  setNumericVariable.makeEditInteger
             4A5              1548  setNumericVariable.stringFoundError
             4B1              1554  setStringVariable
             4D4              1577  setStringVariable.exit
             4DA              157D  setStringVariable.makeEditString
             4E1              1584  setStringVariable.intFoundError
             4ED              1590  findOtherExpressionsOnLine
             4F6              1599  findOtherExpressionsOnLine.exit
             4F7              159A  funTbl
             54E              15F1  oldSchoolAssignemnt
             55E              1601  newProgram
             5B2              1655  listProgram
             5B5              1658  runProgram
             5B8              165B  printStatement
             5BE              1661  printStatement.printStart
             5D4              1677  printStatement.printExpr
             5EE              1691  printStatement.printStringVar
             61B              16BE  printStatement.stringPrint
             633              16D6  printStatement.psvexit
             640              16E3  printStatement.closespeechmarks
             647              16EA  getInput
             64A              16ED  handleIf
             64D              16F0  fancyJmp
             650              16F3  returnToDOS
             653              16F6  forLoop
             656              16F9  cls
             65B              16FE  dbgr
             65E              1701  decimalToHex
             663              1706  decimalToHex.processDigits
             67F              1722  decimalToHex.exit
             686              1729  printdecimalword
             6B6              1759  printdecimalword.pdw0
             6C6              1769  printdecimalword.pdw1
             6DF              1782  allocateBlock
             711              17B4  allocateBlock.exit
             713              17B6  allocateBlock.memoryFull
             71F              17C2  allocateBlock.firstAllocation
             73E              17E1  findVariable
             753              17F6  findVariable.search
             75F              1802  findVariable.invalid
             76E              1811  findVariable.varFound
             779              181C  findVariable.datFound
             787              182A  findVariable.varNotFound
             791              1834  findVariable.exit
             797              183A  findFirstLine
             7A6              1849  searchForProgramLine
             7B6              1859  searchForProgramLine.search
             7C8              186B  searchForProgramLine.lineFound
             7C9              186C  insertProgramLine
             7EC              188F  insertProgramLine.walk
             800              18A3  insertProgramLine.candidate
             80F              18B2  insertProgramLine.sort
             822              18C5  insertProgramLine.skipLink
             830              18D3  insertProgramLine.first
             842              18E5  insertProgramLine.exit
             848              18EB  makeEditInteger
             85B              18FE  makeEditInteger.newVar
             887              192A  makeEditInteger.error
             893              1936  makeEditString
             8CD              1970  makeEditString.strcopy
             8E1              1984  makeEditString.error
             8ED              1990  terminatedstrcpy
             8EE              1991  terminatedstrcpy.copy
             8FE              19A1  terminatedstrcpy.exit
             900              19A3  strcpy
             909              19AC  strlen
             90D              19B0  strlen.search
             914              19B7  strlen.exit
             917              19BA  memoryDetection
             920              19C3  memoryDetection.findStartAddr
             927              19CA  memoryDetection.fsa1
             957              19FA  memoryDetection.exit
             958              19FB  memoryDetection.worstCase
             979              1A1C  prompt
             97E              1A21  mainmsg
             992              1A35  bytemsg
             9A0              1A43  crlf
             9A3              1A46  errmsg
             9AB              1A4E  numbers
             9B5              1A58  varChrs
             9DB              1A7E  noMem
             9EB              1A8E  syntax
             9FA              1A9D  typeError
             A0A              1AAD  lineNoXist

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             A22              1AC5  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


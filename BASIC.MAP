
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               75F  000006DC  progbits  resSeg
            1802               75F               75F  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 6DC
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  75F
align:                    1
follows:   resSeg
vstart:                1802
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000000E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000100  maxLineLen
00000030  digitStringLen
0000001C  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              E8              118B  mainLoop
             10D              11B0  criticalError
             117              11BA  printdecimalword
             147              11EA  printdecimalword.pdw0
             157              11FA  printdecimalword.pdw1
             170              1213  getLineInput
             18D              1230  getLineInput.getChar
             1A9              124C  getLineInput.glibspace
             1D2              1275  getLineInput.gliCheckCase
             1E1              1284  getLineInput.gliccStore
             1EA              128D  getLineInput.gliExtendedChar
             1EC              128F  getLineInput.gliExit
             1FC              129F  getLineInput.gliFull
             208              12AB  ttyOutChar
             20D              12B0  ttyOutString
             215              12B8  ttyIn
             21A              12BD  saveExecuteLine
             22A              12CD  saveExecuteLine.saveLine
             22A              12CD  executeExpression
             23B              12DE  executeExpression.functionFinderLoop
             25F              1302  executeExpression.functionFound
             25F              1302  executeExpression.exit
             260              1303  executeExpression.variableAssignment
             29E              1341  executeExpression.exitError
             2AA              134D  executeExpression.stringAssignment
             2AA              134D  spaceSkip
             2B4              1357  spaceSkip.exit
             2B5              1358  getVarNameLength
             2C3              1366  getVarNameLength.search
             2DA              137D  getVarNameLength.exit
             2E2              1385  getVarType
             2FF              13A2  handleAlgebraicExpression
             304              13A7  handleAlgebraicExpression.parseAdditiveOperators
             318              13BB  handleAlgebraicExpression.processAdd
             31E              13C1  handleAlgebraicExpression.processMinus
             329              13CC  handleAlgebraicExpression.handleSecondLevelSkip
             32C              13CF  handleAlgebraicExpression.handleSecondLevel
             331              13D4  handleAlgebraicExpression.parseProductOperators
             347              13EA  handleAlgebraicExpression.processDiv
             35A              13FD  handleAlgebraicExpression.handleThirdLevelSkip
             35D              1400  handleAlgebraicExpression.handleThirdLevel
             373              1416  handleAlgebraicExpression.notBracket
             377              141A  handleAlgebraicExpression.varConstCheck
             388              142B  handleAlgebraicExpression.varOrRNDFound
             3A1              1444  handleAlgebraicExpression.exponentFound
             3A3              1446  handleAlgebraicExpression.varFound
             3A9              144C  handleAlgebraicExpression.closeBracket
             3B1              1454  handleAlgebraicExpression.exit
             3B2              1455  handleAlgebraicExpression.error
             3BE              1461  getNumericVariable
             3D9              147C  getNumericVariable.stringFoundError
             3E5              1488  setNumericVariable
             405              14A8  setNumericVariable.exit
             409              14AC  setNumericVariable.makeEditInteger
             410              14B3  setNumericVariable.stringFoundError
             41C              14BF  funTbl
             485              1528  newProgram
             485              1528  listProgram
             485              1528  runProgram
             485              1528  printStatement
             485              1528  getInput
             485              1528  handleIf
             485              1528  fancyJmp
             485              1528  returnToDOS
             486              1529  decimalToHex
             48B              152E  decimalToHex.processDigits
             4A7              154A  decimalToHex.exit
             4AE              1551  allocateBlock
             4E0              1583  allocateBlock.memoryFull
             4EB              158E  allocateBlock.firstAllocation
             50A              15AD  findVariable
             51F              15C2  findVariable.search
             525              15C8  findVariable.invalid
             534              15D7  findVariable.varFound
             53F              15E2  findVariable.varNotFound
             549              15EC  findVariable.exit
             54F              15F2  findFirstLine
             55E              1601  searchForProgramLine
             565              1608  searchForProgramLine.search
             577              161A  searchForProgramLine.lineFound
             578              161B  insertProgramLine
             598              163B  insertProgramLine.walk
             5AC              164F  insertProgramLine.candidate
             5BB              165E  insertProgramLine.sort
             5CE              1671  insertProgramLine.skipLink
             5DC              167F  insertProgramLine.first
             5EE              1691  insertProgramLine.exit
             5F4              1697  makeEditVariable
             60C              16AF  makeEditVariable.string
             611              16B4  makeEditVariable.exit
             615              16B8  makeEditInteger
             628              16CB  makeEditInteger.newVar
             655              16F8  makeEditInteger.error
             661              1704  makeEditString
             66D              1710  strcpy
             676              1719  memoryDetection
             67F              1722  memoryDetection.findStartAddr
             686              1729  memoryDetection.fsa1
             6B6              1759  memoryDetection.exit
             6B7              175A  memoryDetection.worstCase
             6D8              177B  prompt
             6DD              1780  mainmsg
             6F1              1794  bytemsg
             6FF              17A2  crlf
             702              17A5  errmsg
             70A              17AD  numbers
             714              17B7  varChrs
             730              17D3  noMem
             740              17E3  syntax
             74F              17F2  typeError

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             75F              1802  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


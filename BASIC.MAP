
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               89D  0000081A  progbits  resSeg
            1940               89D               89D  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 81A
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  89D
align:                    1
follows:   resSeg
vstart:                1940
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000100  maxLineLen
00000030  digitStringLen
0000001C  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              B1              1154  mainLoop
              CD              1170  mainLoop.ml0
              E2              1185  mainLoop.saveLine
             110              11B3  mainLoop.commonProc
             12A              11CD  mainLoop.lineDoesntExist
             131              11D4  criticalError
             13B              11DE  getLineInput
             158              11FB  getLineInput.getChar
             174              1217  getLineInput.glibspace
             19D              1240  getLineInput.gliCheckCase
             1AC              124F  getLineInput.gliccStore
             1B5              1258  getLineInput.gliExtendedChar
             1B7              125A  getLineInput.gliExit
             1C7              126A  getLineInput.gliFull
             1D3              1276  ttyOutChar
             1D8              127B  ttyOutString
             1E0              1283  ttyIn
             1E5              1288  ttyClear
             1FE              12A1  executeExpression
             20F              12B2  executeExpression.functionFinderLoop
             233              12D6  executeExpression.functionFound
             247              12EA  executeExpression.exit
             248              12EB  executeExpression.variableAssignment
             296              1339  executeExpression.exitError
             2A2              1345  executeExpression.stringAssignment
             2A2              1345  spaceSkip
             2AC              134F  spaceSkip.exit
             2AD              1350  getVarNameLength
             2BB              135E  getVarNameLength.search
             2D2              1375  getVarNameLength.exit
             2DA              137D  getVarType
             2F7              139A  handleAlgebraicExpression
             302              13A5  handleAlgebraicExpression.hae0
             30D              13B0  handleAlgebraicExpression.hae1
             31D              13C0  handleAlgebraicExpression.hae2
             328              13CB  handleAlgebraicExpression.relationals
             34A              13ED  handleAlgebraicExpression.parseAdditiveOperators
             35E              1401  handleAlgebraicExpression.processAdd
             364              1407  handleAlgebraicExpression.processMinus
             36F              1412  handleAlgebraicExpression.handleSecondLevelSkip
             372              1415  handleAlgebraicExpression.handleSecondLevel
             377              141A  handleAlgebraicExpression.parseProductOperators
             38D              1430  handleAlgebraicExpression.processDiv
             3A0              1443  handleAlgebraicExpression.handleThirdLevelSkip
             3A3              1446  handleAlgebraicExpression.handleThirdLevel
             3B9              145C  handleAlgebraicExpression.notBracket
             3BD              1460  handleAlgebraicExpression.varConstCheck
             3CE              1471  handleAlgebraicExpression.varOrRNDFound
             3E6              1489  handleAlgebraicExpression.exit
             3E7              148A  handleAlgebraicExpression.exponentFound
             3E9              148C  handleAlgebraicExpression.varFound
             400              14A3  handleAlgebraicExpression.closeBracket
             408              14AB  handleAlgebraicExpression.error
             414              14B7  getNumericVariable
             434              14D7  getNumericVariable.exit
             438              14DB  getNumericVariable.noVar
             43C              14DF  getNumericVariable.stringFoundError
             448              14EB  setNumericVariable
             468              150B  setNumericVariable.exit
             46C              150F  setNumericVariable.makeEditInteger
             473              1516  setNumericVariable.stringFoundError
             47F              1522  findOtherExpressionsOnLine
             488              152B  findOtherExpressionsOnLine.exit
             489              152C  funTbl
             4CE              1571  newProgram
             51C              15BF  listProgram
             51F              15C2  runProgram
             522              15C5  printStatement
             525              15C8  getInput
             528              15CB  handleIf
             52B              15CE  fancyJmp
             52E              15D1  returnToDOS
             531              15D4  forLoop
             534              15D7  cls
             539              15DC  decimalToHex
             53E              15E1  decimalToHex.processDigits
             55A              15FD  decimalToHex.exit
             561              1604  printdecimalword
             591              1634  printdecimalword.pdw0
             5A1              1644  printdecimalword.pdw1
             5BA              165D  allocateBlock
             5EC              168F  allocateBlock.memoryFull
             5F7              169A  allocateBlock.firstAllocation
             616              16B9  findVariable
             62B              16CE  findVariable.search
             631              16D4  findVariable.invalid
             640              16E3  findVariable.varFound
             64B              16EE  findVariable.varNotFound
             655              16F8  findVariable.exit
             65B              16FE  findFirstLine
             66A              170D  searchForProgramLine
             67A              171D  searchForProgramLine.search
             68C              172F  searchForProgramLine.lineFound
             68D              1730  insertProgramLine
             6B0              1753  insertProgramLine.walk
             6C4              1767  insertProgramLine.candidate
             6D3              1776  insertProgramLine.sort
             6E6              1789  insertProgramLine.skipLink
             6F4              1797  insertProgramLine.first
             706              17A9  insertProgramLine.exit
             70C              17AF  makeEditVariable
             724              17C7  makeEditVariable.string
             729              17CC  makeEditVariable.exit
             72D              17D0  makeEditInteger
             740              17E3  makeEditInteger.newVar
             76D              1810  makeEditInteger.error
             779              181C  makeEditString
             785              1828  strcpy
             78E              1831  strlen
             792              1835  strlen.search
             799              183C  strlen.exit
             79C              183F  memoryDetection
             7A5              1848  memoryDetection.findStartAddr
             7AC              184F  memoryDetection.fsa1
             7DC              187F  memoryDetection.exit
             7DD              1880  memoryDetection.worstCase
             7FE              18A1  prompt
             803              18A6  mainmsg
             817              18BA  bytemsg
             825              18C8  crlf
             828              18CB  errmsg
             830              18D3  numbers
             83A              18DD  varChrs
             856              18F9  noMem
             866              1909  syntax
             875              1918  typeError
             885              1928  lineNoXist

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             89D              1940  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen



- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               CDE  00000C5B  progbits  resSeg
            1D81               CDE               CDE  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 C5B
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  CDE
align:                    1
follows:   resSeg
vstart:                1D81
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000001  breakBit
00000002  traceBit
00000003  indirectBit
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              BF              1162  mainLoop
              E2              1185  mainLoop.ml0
              FD              11A0  mainLoop.saveLine
             12B              11CE  mainLoop.commonProc
             145              11E8  mainLoop.lineDoesntExist
             14C              11EF  criticalError
             156              11F9  ctrlBreakHandler
             15F              1202  setHandler
             17F              1222  getLineInput
             19C              123F  getLineInput.getChar
             1B8              125B  getLineInput.glibspace
             1E1              1284  getLineInput.gliCheckCase
             1F0              1293  getLineInput.gliccStore
             1F9              129C  getLineInput.gliExtendedChar
             1FB              129E  getLineInput.gliExit
             20B              12AE  getLineInput.gliFull
             217              12BA  ttyOutChar
             21C              12BF  ttyOutString
             224              12C7  ttyIn
             229              12CC  ttyClear
             242              12E5  mainProcessor
             253              12F6  mainProcessor.functionFinderLoop
             277              131A  mainProcessor.functionFound
             28F              1332  mainProcessor.runFunction
             2A1              1344  mainProcessor.mp0
             2B5              1358  mainProcessor.exit
             2B6              1359  mainProcessor.notLetVarAssignment
             2BF              1362  mainProcessor.tron
             2E4              1387  mainProcessor.break
             30D              13B0  spaceSkip
             317              13BA  spaceSkip.exit
             318              13BB  getVarNameLength
             326              13C9  getVarNameLength.search
             33D              13E0  getVarNameLength.exit
             345              13E8  getVarType
             35C              13FF  getVarType.exit
             360              1403  handleAlgebraicExpression
             36B              140E  handleAlgebraicExpression.hae0
             376              1419  handleAlgebraicExpression.hae1
             386              1429  handleAlgebraicExpression.hae2
             391              1434  handleAlgebraicExpression.relationals
             3AE              1451  handleAlgebraicExpression.handleSecondLevel
             3B3              1456  handleAlgebraicExpression.parseAdditiveOperators
             3C7              146A  handleAlgebraicExpression.processAdd
             3CD              1470  handleAlgebraicExpression.processMinus
             3D8              147B  handleAlgebraicExpression.handleFirstLevelSkip
             3DB              147E  handleAlgebraicExpression.handleFirstLevel
             3E0              1483  handleAlgebraicExpression.parseProductOperators
             3F6              1499  handleAlgebraicExpression.processDiv
             409              14AC  handleAlgebraicExpression.handleZerothLevelSkip
             40C              14AF  handleAlgebraicExpression.handleZerothLevel
             422              14C5  handleAlgebraicExpression.notBracket
             426              14C9  handleAlgebraicExpression.varConstCheck
             437              14DA  handleAlgebraicExpression.varOrRNDFound
             453              14F6  handleAlgebraicExpression.exit
             454              14F7  handleAlgebraicExpression.exponentFound
             456              14F9  handleAlgebraicExpression.varFound
             46D              1510  handleAlgebraicExpression.closeBracket
             475              1518  handleAlgebraicExpression.error
             481              1524  getNumericVariable
             4A1              1544  getNumericVariable.exit
             4A5              1548  getNumericVariable.noVar
             4A9              154C  getNumericVariable.stringFoundError
             4B5              1558  setNumericVariable
             4D5              1578  setNumericVariable.exit
             4D9              157C  setNumericVariable.makeEditInteger
             4E0              1583  setNumericVariable.stringFoundError
             4EC              158F  setStringVariable
             4F9              159C  findOtherExpressionsOnLine
             502              15A5  findOtherExpressionsOnLine.exit
             503              15A6  funTbl
             58F              1632  thenStr
             596              1639  elseStr
             5BC              165F  badCmd
             5C8              166B  endProg
             5CD              1670  tron
             5D5              1678  troff
             5DD              1680  memRead
             5DD              1680  memWrite
             5DD              1680  byteRead
             5DD              1680  byteWrite
             5DE              1681  oldSchoolAssignemnt
             5E3              1686  variableAssignment
             626              16C9  variableAssignment.stringAssignment
             649              16EC  variableAssignment.syntaxError
             655              16F8  variableAssignment.typError
             661              1704  newProgram
             6C3              1766  listProgram
             6CA              176D  listProgram.printLines
             6FE              17A1  listProgram.exit
             6FF              17A2  runProgram
             6FF              17A2  printStatement
             6FF              17A2  printStatement.printStart
             715              17B8  printStatement.printExpr
             718              17BB  printStatement.printExpr1
             729              17CC  printStatement.printStringVar
             756              17F9  printStatement.stringPrint
             76E              1811  printStatement.openSpeechMark
             771              1814  printStatement.psvexitColon
             774              1817  printStatement.psvexit
             781              1824  printStatement.closespeechmarks
             790              1833  printStatement.continue
             79A              183D  getInput
             7A4              1847  getInput.customPrompt
             7A7              184A  getInput.cp0
             7B0              1853  getInput.error
             7BC              185F  getInput.printCustomPrompt
             7BF              1862  getInput.pcp0
             7CB              186E  getInput.stopPrompt
             7D9              187C  getInput.defaultPrompt
             7E3              1886  getInput.noDefaultPrompt
             821              18C4  getInput.handleNumeric
             830              18D3  getInput.handleString
             83B              18DE  getInput.commonExit
             83C              18DF  handleIf
             866              1909  handleIf.hi0
             867              190A  handleIf.else
             86D              1910  handleIf.noElse0
             86D              1910  handleIf.noElse
             86E              1911  handleIf.error
             87A              191D  goto
             89B              193E  goto.unknownLineNumber
             8AC              194F  forLoop
             8AF              1952  returnToDOS
             8BB              195E  cls
             8C0              1963  dbgr
             8E0              1983  dbgr.farReturn
             909              19AC  decimalToHex
             90E              19B1  decimalToHex.processDigits
             92A              19CD  decimalToHex.exit
             931              19D4  printdecimalword
             961              1A04  printdecimalword.pdw0
             971              1A14  printdecimalword.pdw1
             98A              1A2D  allocateBlock
             98B              1A2E  allocateBlock.ab0
             9BC              1A5F  allocateBlock.exit
             9BE              1A61  allocateBlock.memoryFull
             9CA              1A6D  allocateBlock.firstAllocation
             9EA              1A8D  findVariable
             9FF              1AA2  findVariable.search
             A0B              1AAE  findVariable.invalid
             A1A              1ABD  findVariable.varFound
             A29              1ACC  findVariable.datFound
             A3B              1ADE  findVariable.varNotFound
             A45              1AE8  findVariable.exit
             A4B              1AEE  findFirstLine
             A5A              1AFD  searchForProgramLine
             A6A              1B0D  searchForProgramLine.search
             A7D              1B20  searchForProgramLine.lineFound
             A7E              1B21  insertProgramLine
             A9E              1B41  insertProgramLine.walk
             AB2              1B55  insertProgramLine.candidate
             AC1              1B64  insertProgramLine.sort
             AD4              1B77  insertProgramLine.skipLink
             AE2              1B85  insertProgramLine.first
             AF4              1B97  insertProgramLine.exit
             AFA              1B9D  makeEditInteger
             B0D              1BB0  makeEditInteger.newVar
             B39              1BDC  makeEditInteger.error
             B45              1BE8  makeEditString
             B7F              1C22  makeEditString.strcopy
             B93              1C36  makeEditString.error
             B9F              1C42  terminatedstrcpy
             BA0              1C43  terminatedstrcpy.copy
             BB0              1C53  terminatedstrcpy.exit
             BB2              1C55  strcpy
             BBB              1C5E  strlen
             BBF              1C62  strlen.search
             BC6              1C69  strlen.exit
             BC9              1C6C  memoryDetection
             BD2              1C75  memoryDetection.findStartAddr
             BD9              1C7C  memoryDetection.fsa1
             C09              1CAC  memoryDetection.exit
             C0A              1CAD  memoryDetection.worstCase
             C2B              1CCE  prompt
             C30              1CD3  mainmsg
             C44              1CE7  bytemsg
             C52              1CF5  crlf
             C55              1CF8  errmsg
             C5D              1D00  numbers
             C67              1D0A  varChrs
             C8D              1D30  noMem
             C9D              1D40  syntax
             CAC              1D4F  typeError
             CBC              1D5F  lineNoXist
             CD4              1D77  breakmsg

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             CDE              1D81  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


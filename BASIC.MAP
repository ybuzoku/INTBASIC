
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
             EF6                83               E1A  00000D97  progbits  resSeg
            1C8D               E1A               E1A  00000000  progbits  programArea
               0                 0               EF6  00000EF6  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 D97
start:                   83
align:                    1
follows:   .text
vstart:                 EF6
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  E1A
align:                    1
follows:   resSeg
vstart:                1C8D
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                 EF6
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000001  breakBit
00000002  traceBit
00000004  indirectBit
00000008  ctrlFlow
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83               EF6  start
              BF               F32  mainLoop
              E2               F55  mainLoop.ml0
              FD               F70  mainLoop.saveLine
             12B               F9E  mainLoop.commonProc
             145               FB8  mainLoop.lineDoesntExist
             14C               FBF  criticalError
             156               FC9  ctrlBreakHandler
             15F               FD2  setHandler
             17F               FF2  getLineInput
             19C              100F  getLineInput.getChar
             1B8              102B  getLineInput.glibspace
             1E1              1054  getLineInput.gliCheckCase
             1F0              1063  getLineInput.gliccStore
             1F9              106C  getLineInput.gliExtendedChar
             1FB              106E  getLineInput.gliExit
             20B              107E  getLineInput.gliFull
             217              108A  ttyOutChar
             21C              108F  ttyOutString
             224              1097  ttyIn
             229              109C  ttyClear
             242              10B5  keywordParser
             253              10C6  keywordParser.functionFinderLoop
             277              10EA  keywordParser.functionFound
             28F              1102  keywordParser.exit
             290              1103  keywordParser.exitEmpty
             29B              110E  keywordParser.notLetVarAssignment
             2A4              1117  runLine
             2B1              1124  runLine.stringPortionProcess
             2F8              116B  runLine.gotoNextLine
             31E              1191  runLine.gotoNextLineCommon
             32E              11A1  runLine.exit
             32F              11A2  runLine.ctrlFlowHandler
             344              11B7  runLine.badLineNumber
             350              11C3  runLine.tron
             37C              11EF  runLine.break
             3A5              1218  spaceSkip
             3AF              1222  spaceSkip.exit
             3B0              1223  getVarNameLength
             3BE              1231  getVarNameLength.search
             3D5              1248  getVarNameLength.exit
             3DD              1250  getVarType
             3F4              1267  getVarType.exit
             3F8              126B  handleAlgebraicExpression
             403              1276  handleAlgebraicExpression.hae0
             40E              1281  handleAlgebraicExpression.hae1
             41E              1291  handleAlgebraicExpression.hae2
             429              129C  handleAlgebraicExpression.relationals
             446              12B9  handleAlgebraicExpression.handleSecondLevel
             44B              12BE  handleAlgebraicExpression.parseAdditiveOperators
             45F              12D2  handleAlgebraicExpression.processAdd
             465              12D8  handleAlgebraicExpression.processMinus
             470              12E3  handleAlgebraicExpression.handleFirstLevelSkip
             473              12E6  handleAlgebraicExpression.handleFirstLevel
             478              12EB  handleAlgebraicExpression.parseProductOperators
             48E              1301  handleAlgebraicExpression.processDiv
             4A1              1314  handleAlgebraicExpression.handleZerothLevelSkip
             4A4              1317  handleAlgebraicExpression.handleZerothLevel
             4BA              132D  handleAlgebraicExpression.notBracket
             4BE              1331  handleAlgebraicExpression.varConstCheck
             4CF              1342  handleAlgebraicExpression.varOrRNDFound
             4EB              135E  handleAlgebraicExpression.exit
             4EC              135F  handleAlgebraicExpression.exponentFound
             4EE              1361  handleAlgebraicExpression.varFound
             505              1378  handleAlgebraicExpression.closeBracket
             50D              1380  handleAlgebraicExpression.error
             519              138C  getNumericVariable
             539              13AC  getNumericVariable.exit
             53D              13B0  getNumericVariable.noVar
             541              13B4  getNumericVariable.stringFoundError
             54D              13C0  setNumericVariable
             56D              13E0  setNumericVariable.exit
             571              13E4  setNumericVariable.makeEditInteger
             578              13EB  setNumericVariable.stringFoundError
             584              13F7  setStringVariable
             591              1404  findOtherExpressionsOnLine
             59A              140D  findOtherExpressionsOnLine.exit
             59B              140E  funTbl
             612              1485  thenStr
             619              148C  elseStr
             67B              14EE  badCmd
             687              14FA  endProg
             68C              14FF  tron
             694              1507  troff
             69C              150F  memRead
             69C              150F  memWrite
             69C              150F  byteRead
             69C              150F  byteWrite
             69D              1510  oldSchoolAssignemnt
             6A2              1515  variableAssignment
             6E5              1558  variableAssignment.stringAssignment
             708              157B  variableAssignment.syntaxError
             714              1587  variableAssignment.typError
             720              1593  newProgram
             782              15F5  listProgram
             789              15FC  listProgram.printLines
             7BD              1630  listProgram.exit
             7BE              1631  runProgram
             7DD              1650  printStatement
             7DD              1650  printStatement.printStart
             7F3              1666  printStatement.printExpr
             7F6              1669  printStatement.printExpr1
             807              167A  printStatement.printStringVar
             834              16A7  printStatement.stringPrint
             84C              16BF  printStatement.openSpeechMark
             84F              16C2  printStatement.psvexitColon
             852              16C5  printStatement.psvexit
             85F              16D2  printStatement.closespeechmarks
             86E              16E1  printStatement.continue
             878              16EB  getInput
             882              16F5  getInput.customPrompt
             885              16F8  getInput.cp0
             88E              1701  getInput.error
             89A              170D  getInput.printCustomPrompt
             89D              1710  getInput.pcp0
             8A9              171C  getInput.stopPrompt
             8B7              172A  getInput.defaultPrompt
             8C1              1734  getInput.noDefaultPrompt
             8FF              1772  getInput.handleNumeric
             90E              1781  getInput.handleString
             919              178C  getInput.commonExit
             91A              178D  returnToDOS
             926              1799  cls
             92B              179E  dbgr
             94B              17BE  dbgr.farReturn
             974              17E7  retScan
             974              17E7  wendScan
             974              17E7  nextScan
             974              17E7  goto
             989              17FC  forLoop
             98A              17FD  next
             98B              17FE  gosub
             98C              17FF  return
             98D              1800  while
             98E              1801  wend
             98F              1802  handleIf
             9B9              182C  handleIf.hi0
             9BA              182D  handleIf.else
             9C0              1833  handleIf.noElse0
             9C0              1833  handleIf.noElse
             9C1              1834  handleIf.error
             9CD              1840  decimalToHex
             9D2              1845  decimalToHex.processDigits
             9EE              1861  decimalToHex.exit
             9F5              1868  printdecimalword
             A25              1898  printdecimalword.pdw0
             A35              18A8  printdecimalword.pdw1
             A4E              18C1  allocateBlock
             A4F              18C2  allocateBlock.ab0
             A80              18F3  allocateBlock.exit
             A82              18F5  allocateBlock.memoryFull
             A8E              1901  allocateBlock.firstAllocation
             AAE              1921  findVariable
             AC3              1936  findVariable.search
             ACF              1942  findVariable.invalid
             ADE              1951  findVariable.varFound
             AED              1960  findVariable.datFound
             AFF              1972  findVariable.varNotFound
             B09              197C  findVariable.exit
             B0F              1982  findFirstLine
             B1E              1991  searchForProgramLine
             B2E              19A1  searchForProgramLine.search
             B41              19B4  searchForProgramLine.lineFound
             B42              19B5  insertProgramLine
             B62              19D5  insertProgramLine.walk
             B76              19E9  insertProgramLine.candidate
             B85              19F8  insertProgramLine.sort
             B98              1A0B  insertProgramLine.skipLink
             BA6              1A19  insertProgramLine.first
             BB8              1A2B  insertProgramLine.exit
             BBE              1A31  makeEditInteger
             BD1              1A44  makeEditInteger.newVar
             BFD              1A70  makeEditInteger.error
             C09              1A7C  makeEditString
             C43              1AB6  makeEditString.strcopy
             C57              1ACA  makeEditString.error
             C63              1AD6  terminatedstrcpy
             C64              1AD7  terminatedstrcpy.copy
             C74              1AE7  terminatedstrcpy.exit
             C76              1AE9  strcpy
             C7F              1AF2  strlen
             C83              1AF6  strlen.search
             C8A              1AFD  strlen.exit
             C8D              1B00  memoryDetection
             C96              1B09  memoryDetection.findStartAddr
             C9D              1B10  memoryDetection.fsa1
             CCD              1B40  memoryDetection.exit
             CCE              1B41  memoryDetection.worstCase
             CEF              1B62  prompt
             CF4              1B67  mainmsg
             D08              1B7B  bytemsg
             D16              1B89  crlf
             D19              1B8C  errmsg
             D21              1B94  numbers
             D2B              1B9E  varChrs
             D51              1BC4  noMem
             D61              1BD4  syntax
             D70              1BE3  typeError
             D80              1BF3  lineNoXist
             D98              1C0B  breakmsg
             DA2              1C15  stkOvflw
             DB3              1C26  nowend
             DC8              1C3B  noWhile
             DDD              1C50  noFor
             DF0              1C63  noNext
             E03              1C76  noReturn

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             E1A              1C8D  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  oflowbuff
              50                50  stack
             D90               D90  stacktop
             D98               D98  inString
             E98               E98  digitString
             EC8               EC8  minMemAddr
             ED0               ED0  maxMemAddr
             ED8               ED8  strLen
             ED9               ED9  stateByte
             EDA               EDA  mcbChain
             EE2               EE2  lastBlock
             EEA               EEA  firstLinPtr
             EF2               EF2  firstLinNum
             EF4               EF4  currentLine
             EF6               EF6  bssLen



- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               BAB  00000B28  progbits  resSeg
            1C4E               BAB               BAB  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 B28
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  BAB
align:                    1
follows:   resSeg
vstart:                1C4E
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              BF              1162  mainLoop
              E2              1185  mainLoop.ml0
              F1              1194  mainLoop.ml1
             100              11A3  mainLoop.saveLine
             12E              11D1  mainLoop.commonProc
             148              11EB  mainLoop.lineDoesntExist
             14F              11F2  criticalError
             159              11FC  ctrlBreakHandler
             162              1205  setHandler
             182              1225  getLineInput
             19F              1242  getLineInput.getChar
             1BB              125E  getLineInput.glibspace
             1E4              1287  getLineInput.gliCheckCase
             1F3              1296  getLineInput.gliccStore
             1FC              129F  getLineInput.gliExtendedChar
             1FE              12A1  getLineInput.gliExit
             20E              12B1  getLineInput.gliFull
             21A              12BD  ttyOutChar
             21F              12C2  ttyOutString
             227              12CA  ttyIn
             22C              12CF  ttyClear
             245              12E8  executeExpression
             256              12F9  executeExpression.functionFinderLoop
             27A              131D  executeExpression.functionFound
             28E              1331  executeExpression.exit
             28F              1332  executeExpression.variableAssignment
             2D2              1375  executeExpression.stringAssignment
             2F5              1398  executeExpression.syntaxError
             301              13A4  executeExpression.typError
             30D              13B0  spaceSkip
             317              13BA  spaceSkip.exit
             318              13BB  getVarNameLength
             326              13C9  getVarNameLength.search
             33D              13E0  getVarNameLength.exit
             345              13E8  getVarType
             35C              13FF  getVarType.exit
             360              1403  handleAlgebraicExpression
             36B              140E  handleAlgebraicExpression.hae0
             376              1419  handleAlgebraicExpression.hae1
             386              1429  handleAlgebraicExpression.hae2
             391              1434  handleAlgebraicExpression.relationals
             3AE              1451  handleAlgebraicExpression.handleSecondLevel
             3B3              1456  handleAlgebraicExpression.parseAdditiveOperators
             3C7              146A  handleAlgebraicExpression.processAdd
             3CD              1470  handleAlgebraicExpression.processMinus
             3D8              147B  handleAlgebraicExpression.handleFirstLevelSkip
             3DB              147E  handleAlgebraicExpression.handleFirstLevel
             3E0              1483  handleAlgebraicExpression.parseProductOperators
             3F6              1499  handleAlgebraicExpression.processDiv
             409              14AC  handleAlgebraicExpression.handleZerothLevelSkip
             40C              14AF  handleAlgebraicExpression.handleZerothLevel
             422              14C5  handleAlgebraicExpression.notBracket
             426              14C9  handleAlgebraicExpression.varConstCheck
             437              14DA  handleAlgebraicExpression.varOrRNDFound
             453              14F6  handleAlgebraicExpression.exit
             454              14F7  handleAlgebraicExpression.exponentFound
             456              14F9  handleAlgebraicExpression.varFound
             46D              1510  handleAlgebraicExpression.closeBracket
             475              1518  handleAlgebraicExpression.error
             481              1524  getNumericVariable
             4A1              1544  getNumericVariable.exit
             4A5              1548  getNumericVariable.noVar
             4A9              154C  getNumericVariable.stringFoundError
             4B5              1558  setNumericVariable
             4D5              1578  setNumericVariable.exit
             4D9              157C  setNumericVariable.makeEditInteger
             4E0              1583  setNumericVariable.stringFoundError
             4EC              158F  setStringVariable
             4F9              159C  findOtherExpressionsOnLine
             502              15A5  findOtherExpressionsOnLine.exit
             503              15A6  funTbl
             56B              160E  oldSchoolAssignemnt
             57D              1620  newProgram
             5DF              1682  listProgram
             5E6              1689  listProgram.printLines
             61A              16BD  listProgram.exit
             61B              16BE  runProgram
             622              16C5  runProgram.runLines
             63F              16E2  runProgram.rl0
             667              170A  runProgram.exit
             668              170B  runProgram.break
             693              1736  printStatement
             69E              1741  printStatement.printStart
             6B4              1757  printStatement.printExpr
             6B7              175A  printStatement.printExpr1
             6C8              176B  printStatement.printStringVar
             6F5              1798  printStatement.stringPrint
             70D              17B0  printStatement.openSpeechMark
             710              17B3  printStatement.psvexitColon
             713              17B6  printStatement.psvexit
             720              17C3  printStatement.closespeechmarks
             727              17CA  printStatement.continue
             731              17D4  getInput
             734              17D7  handleIf
             737              17DA  fancyJmp
             768              180B  fancyJmp.unknownLineNumber
             779              181C  forLoop
             77C              181F  returnToDOS
             788              182B  cls
             78D              1830  dbgr
             7AD              1850  dbgr.farReturn
             7D6              1879  decimalToHex
             7DB              187E  decimalToHex.processDigits
             7F7              189A  decimalToHex.exit
             7FE              18A1  printdecimalword
             82E              18D1  printdecimalword.pdw0
             83E              18E1  printdecimalword.pdw1
             857              18FA  allocateBlock
             858              18FB  allocateBlock.ab0
             889              192C  allocateBlock.exit
             88B              192E  allocateBlock.memoryFull
             897              193A  allocateBlock.firstAllocation
             8B7              195A  findVariable
             8CC              196F  findVariable.search
             8D8              197B  findVariable.invalid
             8E7              198A  findVariable.varFound
             8F6              1999  findVariable.datFound
             908              19AB  findVariable.varNotFound
             912              19B5  findVariable.exit
             918              19BB  findFirstLine
             927              19CA  searchForProgramLine
             937              19DA  searchForProgramLine.search
             94A              19ED  searchForProgramLine.lineFound
             94B              19EE  insertProgramLine
             96B              1A0E  insertProgramLine.walk
             97F              1A22  insertProgramLine.candidate
             98E              1A31  insertProgramLine.sort
             9A1              1A44  insertProgramLine.skipLink
             9AF              1A52  insertProgramLine.first
             9C1              1A64  insertProgramLine.exit
             9C7              1A6A  makeEditInteger
             9DA              1A7D  makeEditInteger.newVar
             A06              1AA9  makeEditInteger.error
             A12              1AB5  makeEditString
             A4C              1AEF  makeEditString.strcopy
             A60              1B03  makeEditString.error
             A6C              1B0F  terminatedstrcpy
             A6D              1B10  terminatedstrcpy.copy
             A7D              1B20  terminatedstrcpy.exit
             A7F              1B22  strcpy
             A88              1B2B  strlen
             A8C              1B2F  strlen.search
             A93              1B36  strlen.exit
             A96              1B39  memoryDetection
             A9F              1B42  memoryDetection.findStartAddr
             AA6              1B49  memoryDetection.fsa1
             AD6              1B79  memoryDetection.exit
             AD7              1B7A  memoryDetection.worstCase
             AF8              1B9B  prompt
             AFD              1BA0  mainmsg
             B11              1BB4  bytemsg
             B1F              1BC2  crlf
             B22              1BC5  errmsg
             B2A              1BCD  numbers
             B34              1BD7  varChrs
             B5A              1BFD  noMem
             B6A              1C0D  syntax
             B79              1C1C  typeError
             B89              1C2C  lineNoXist
             BA1              1C44  breakmsg

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             BAB              1C4E  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


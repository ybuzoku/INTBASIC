
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               D5F  00000CDC  progbits  resSeg
            1E02               D5F               D5F  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 CDC
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  D5F
align:                    1
follows:   resSeg
vstart:                1E02
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000001  breakBit
00000002  traceBit
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              BF              1162  mainLoop
              E2              1185  mainLoop.ml0
              F6              1199  mainLoop.saveLine
             124              11C7  mainLoop.commonProc
             13E              11E1  mainLoop.lineDoesntExist
             145              11E8  criticalError
             14F              11F2  ctrlBreakHandler
             158              11FB  setHandler
             178              121B  getLineInput
             195              1238  getLineInput.getChar
             1B1              1254  getLineInput.glibspace
             1DA              127D  getLineInput.gliCheckCase
             1E9              128C  getLineInput.gliccStore
             1F2              1295  getLineInput.gliExtendedChar
             1F4              1297  getLineInput.gliExit
             204              12A7  getLineInput.gliFull
             210              12B3  ttyOutChar
             215              12B8  ttyOutString
             21D              12C0  ttyIn
             222              12C5  ttyClear
             23B              12DE  executeExpression
             24C              12EF  executeExpression.functionFinderLoop
             270              1313  executeExpression.functionFound
             284              1327  executeExpression.exit
             285              1328  executeExpression.variableAssignment
             2C8              136B  executeExpression.stringAssignment
             2EB              138E  executeExpression.syntaxError
             2F7              139A  executeExpression.typError
             303              13A6  mainProcessing
             315              13B8  mainProcessing.mp0
             32F              13D2  mainProcessing.tron
             34B              13EE  mainProcessing.break
             374              1417  spaceSkip
             37E              1421  spaceSkip.exit
             37F              1422  getVarNameLength
             38D              1430  getVarNameLength.search
             3A4              1447  getVarNameLength.exit
             3AC              144F  getVarType
             3C3              1466  getVarType.exit
             3C7              146A  handleAlgebraicExpression
             3D2              1475  handleAlgebraicExpression.hae0
             3DD              1480  handleAlgebraicExpression.hae1
             3ED              1490  handleAlgebraicExpression.hae2
             3F8              149B  handleAlgebraicExpression.relationals
             415              14B8  handleAlgebraicExpression.handleSecondLevel
             41A              14BD  handleAlgebraicExpression.parseAdditiveOperators
             42E              14D1  handleAlgebraicExpression.processAdd
             434              14D7  handleAlgebraicExpression.processMinus
             43F              14E2  handleAlgebraicExpression.handleFirstLevelSkip
             442              14E5  handleAlgebraicExpression.handleFirstLevel
             447              14EA  handleAlgebraicExpression.parseProductOperators
             45D              1500  handleAlgebraicExpression.processDiv
             470              1513  handleAlgebraicExpression.handleZerothLevelSkip
             473              1516  handleAlgebraicExpression.handleZerothLevel
             489              152C  handleAlgebraicExpression.notBracket
             48D              1530  handleAlgebraicExpression.varConstCheck
             49E              1541  handleAlgebraicExpression.varOrRNDFound
             4BA              155D  handleAlgebraicExpression.exit
             4BB              155E  handleAlgebraicExpression.exponentFound
             4BD              1560  handleAlgebraicExpression.varFound
             4D4              1577  handleAlgebraicExpression.closeBracket
             4DC              157F  handleAlgebraicExpression.error
             4E8              158B  getNumericVariable
             508              15AB  getNumericVariable.exit
             50C              15AF  getNumericVariable.noVar
             510              15B3  getNumericVariable.stringFoundError
             51C              15BF  setNumericVariable
             53C              15DF  setNumericVariable.exit
             540              15E3  setNumericVariable.makeEditInteger
             547              15EA  setNumericVariable.stringFoundError
             553              15F6  setStringVariable
             560              1603  findOtherExpressionsOnLine
             569              160C  findOtherExpressionsOnLine.exit
             56A              160D  funTbl
             5F6              1699  thenStr
             5FD              16A0  elseStr
             623              16C6  badCmd
             62F              16D2  endProg
             634              16D7  tron
             63C              16DF  troff
             644              16E7  memRead
             644              16E7  memWrite
             644              16E7  byteRead
             644              16E7  byteWrite
             645              16E8  oldSchoolAssignemnt
             657              16FA  newProgram
             6B9              175C  listProgram
             6C0              1763  listProgram.printLines
             6F4              1797  listProgram.exit
             6F5              1798  runProgram
             703              17A6  runProgram.runLines
             725              17C8  runProgram.rl0
             72B              17CE  runProgram.exit
             730              17D3  printStatement
             738              17DB  printStatement.printStart
             74E              17F1  printStatement.printExpr
             751              17F4  printStatement.printExpr1
             762              1805  printStatement.printStringVar
             78F              1832  printStatement.stringPrint
             7A7              184A  printStatement.openSpeechMark
             7AA              184D  printStatement.psvexitColon
             7AD              1850  printStatement.psvexit
             7BA              185D  printStatement.closespeechmarks
             7C9              186C  printStatement.continue
             7D3              1876  getInput
             7E5              1888  getInput.customPrompt
             7E8              188B  getInput.cp0
             7F1              1894  getInput.error
             7FD              18A0  getInput.printCustomPrompt
             800              18A3  getInput.pcp0
             80C              18AF  getInput.stopPrompt
             81A              18BD  getInput.defaultPrompt
             824              18C7  getInput.noDefaultPrompt
             85F              1902  getInput.handleNumeric
             870              1913  getInput.handleString
             87C              191F  handleIf
             8AE              1951  handleIf.mp0
             8B9              195C  handleIf.else
             8BE              1961  handleIf.e0
             8DE              1981  handleIf.noElse0
             8E1              1984  handleIf.noElse
             8E2              1985  handleIf.error
             8EE              1991  fancyJmp
             91C              19BF  fancyJmp.unknownLineNumber
             92D              19D0  forLoop
             930              19D3  returnToDOS
             93C              19DF  cls
             941              19E4  dbgr
             961              1A04  dbgr.farReturn
             98A              1A2D  decimalToHex
             98F              1A32  decimalToHex.processDigits
             9AB              1A4E  decimalToHex.exit
             9B2              1A55  printdecimalword
             9E2              1A85  printdecimalword.pdw0
             9F2              1A95  printdecimalword.pdw1
             A0B              1AAE  allocateBlock
             A0C              1AAF  allocateBlock.ab0
             A3D              1AE0  allocateBlock.exit
             A3F              1AE2  allocateBlock.memoryFull
             A4B              1AEE  allocateBlock.firstAllocation
             A6B              1B0E  findVariable
             A80              1B23  findVariable.search
             A8C              1B2F  findVariable.invalid
             A9B              1B3E  findVariable.varFound
             AAA              1B4D  findVariable.datFound
             ABC              1B5F  findVariable.varNotFound
             AC6              1B69  findVariable.exit
             ACC              1B6F  findFirstLine
             ADB              1B7E  searchForProgramLine
             AEB              1B8E  searchForProgramLine.search
             AFE              1BA1  searchForProgramLine.lineFound
             AFF              1BA2  insertProgramLine
             B1F              1BC2  insertProgramLine.walk
             B33              1BD6  insertProgramLine.candidate
             B42              1BE5  insertProgramLine.sort
             B55              1BF8  insertProgramLine.skipLink
             B63              1C06  insertProgramLine.first
             B75              1C18  insertProgramLine.exit
             B7B              1C1E  makeEditInteger
             B8E              1C31  makeEditInteger.newVar
             BBA              1C5D  makeEditInteger.error
             BC6              1C69  makeEditString
             C00              1CA3  makeEditString.strcopy
             C14              1CB7  makeEditString.error
             C20              1CC3  terminatedstrcpy
             C21              1CC4  terminatedstrcpy.copy
             C31              1CD4  terminatedstrcpy.exit
             C33              1CD6  strcpy
             C3C              1CDF  strlen
             C40              1CE3  strlen.search
             C47              1CEA  strlen.exit
             C4A              1CED  memoryDetection
             C53              1CF6  memoryDetection.findStartAddr
             C5A              1CFD  memoryDetection.fsa1
             C8A              1D2D  memoryDetection.exit
             C8B              1D2E  memoryDetection.worstCase
             CAC              1D4F  prompt
             CB1              1D54  mainmsg
             CC5              1D68  bytemsg
             CD3              1D76  crlf
             CD6              1D79  errmsg
             CDE              1D81  numbers
             CE8              1D8B  varChrs
             D0E              1DB1  noMem
             D1E              1DC1  syntax
             D2D              1DD0  typeError
             D3D              1DE0  lineNoXist
             D55              1DF8  breakmsg

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             D5F              1E02  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


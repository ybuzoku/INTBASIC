
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               75E  000006DB  progbits  resSeg
            1801               75E               75E  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 6DB
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  75E
align:                    1
follows:   resSeg
vstart:                1801
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000000E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000100  maxLineLen
00000030  digitStringLen
0000001C  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              E8              118B  mainLoop
             10D              11B0  criticalError
             117              11BA  printdecimalword
             147              11EA  printdecimalword.pdw0
             157              11FA  printdecimalword.pdw1
             170              1213  getLineInput
             18D              1230  getLineInput.getChar
             1A9              124C  getLineInput.glibspace
             1D2              1275  getLineInput.gliCheckCase
             1E1              1284  getLineInput.gliccStore
             1EA              128D  getLineInput.gliExtendedChar
             1EC              128F  getLineInput.gliExit
             1FC              129F  getLineInput.gliFull
             208              12AB  ttyOutChar
             20D              12B0  ttyOutString
             215              12B8  ttyIn
             21A              12BD  saveExecuteLine
             22A              12CD  saveExecuteLine.saveLine
             22B              12CE  executeExpression
             23C              12DF  executeExpression.functionFinderLoop
             260              1303  executeExpression.functionFound
             277              131A  executeExpression.exit
             278              131B  executeExpression.variableAssignment
             2B6              1359  executeExpression.exitError
             2C2              1365  executeExpression.stringAssignment
             2C2              1365  spaceSkip
             2CC              136F  spaceSkip.exit
             2CD              1370  getVarNameLength
             2DB              137E  getVarNameLength.search
             2F2              1395  getVarNameLength.exit
             2FA              139D  getVarType
             317              13BA  handleAlgebraicExpression
             31C              13BF  handleAlgebraicExpression.parseAdditiveOperators
             330              13D3  handleAlgebraicExpression.processAdd
             336              13D9  handleAlgebraicExpression.processMinus
             341              13E4  handleAlgebraicExpression.handleSecondLevelSkip
             344              13E7  handleAlgebraicExpression.handleSecondLevel
             349              13EC  handleAlgebraicExpression.parseProductOperators
             35F              1402  handleAlgebraicExpression.processDiv
             372              1415  handleAlgebraicExpression.handleThirdLevelSkip
             375              1418  handleAlgebraicExpression.handleThirdLevel
             38B              142E  handleAlgebraicExpression.notBracket
             38F              1432  handleAlgebraicExpression.varConstCheck
             3A0              1443  handleAlgebraicExpression.varOrRNDFound
             3B9              145C  handleAlgebraicExpression.exponentFound
             3BB              145E  handleAlgebraicExpression.varFound
             3C1              1464  handleAlgebraicExpression.closeBracket
             3C9              146C  handleAlgebraicExpression.exit
             3CA              146D  handleAlgebraicExpression.error
             3D6              1479  getNumericVariable
             3F1              1494  getNumericVariable.stringFoundError
             3FD              14A0  setNumericVariable
             41D              14C0  setNumericVariable.exit
             421              14C4  setNumericVariable.makeEditInteger
             428              14CB  setNumericVariable.stringFoundError
             434              14D7  funTbl
             46D              1510  newProgram
             470              1513  listProgram
             473              1516  runProgram
             476              1519  printStatement
             479              151C  getInput
             47C              151F  handleIf
             47F              1522  fancyJmp
             482              1525  returnToDOS
             485              1528  decimalToHex
             48A              152D  decimalToHex.processDigits
             4A6              1549  decimalToHex.exit
             4AD              1550  allocateBlock
             4DF              1582  allocateBlock.memoryFull
             4EA              158D  allocateBlock.firstAllocation
             509              15AC  findVariable
             51E              15C1  findVariable.search
             524              15C7  findVariable.invalid
             533              15D6  findVariable.varFound
             53E              15E1  findVariable.varNotFound
             548              15EB  findVariable.exit
             54E              15F1  findFirstLine
             55D              1600  searchForProgramLine
             564              1607  searchForProgramLine.search
             576              1619  searchForProgramLine.lineFound
             577              161A  insertProgramLine
             597              163A  insertProgramLine.walk
             5AB              164E  insertProgramLine.candidate
             5BA              165D  insertProgramLine.sort
             5CD              1670  insertProgramLine.skipLink
             5DB              167E  insertProgramLine.first
             5ED              1690  insertProgramLine.exit
             5F3              1696  makeEditVariable
             60B              16AE  makeEditVariable.string
             610              16B3  makeEditVariable.exit
             614              16B7  makeEditInteger
             627              16CA  makeEditInteger.newVar
             654              16F7  makeEditInteger.error
             660              1703  makeEditString
             66C              170F  strcpy
             675              1718  memoryDetection
             67E              1721  memoryDetection.findStartAddr
             685              1728  memoryDetection.fsa1
             6B5              1758  memoryDetection.exit
             6B6              1759  memoryDetection.worstCase
             6D7              177A  prompt
             6DC              177F  mainmsg
             6F0              1793  bytemsg
             6FE              17A1  crlf
             701              17A4  errmsg
             709              17AC  numbers
             713              17B6  varChrs
             72F              17D2  noMem
             73F              17E2  syntax
             74E              17F1  typeError

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             75E              1801  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


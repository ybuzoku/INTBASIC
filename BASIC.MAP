
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                88  00000088  progbits  .text
             EF6                88               E2E  00000DA6  progbits  resSeg
            1C9C               E2E               E2E  00000000  progbits  programArea
               0                 0               EF6  00000EF6  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  88
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 DA6
start:                   88
align:                    1
follows:   .text
vstart:                 EF6
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  E2E
align:                    1
follows:   resSeg
vstart:                1C9C
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                 EF6
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000001  breakBit
00000002  traceBit
00000004  indirectBit
00000008  ctrlFlow
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg
              83                83  tst

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              88               EF6  start
              C4               F32  mainLoop
              E7               F55  mainLoop.ml0
             102               F70  mainLoop.saveLine
             130               F9E  mainLoop.commonProc
             14A               FB8  mainLoop.lineDoesntExist
             151               FBF  criticalError
             15B               FC9  ctrlBreakHandler
             164               FD2  setHandler
             184               FF2  getLineInput
             1A1              100F  getLineInput.getChar
             1BD              102B  getLineInput.glibspace
             1E6              1054  getLineInput.gliCheckCase
             1F5              1063  getLineInput.gliccStore
             1FE              106C  getLineInput.gliExtendedChar
             200              106E  getLineInput.gliExit
             210              107E  getLineInput.gliFull
             21C              108A  ttyOutChar
             221              108F  ttyOutString
             229              1097  ttyIn
             22E              109C  ttyClear
             247              10B5  keywordParser
             258              10C6  keywordParser.functionFinderLoop
             27C              10EA  keywordParser.functionFound
             294              1102  keywordParser.exit
             295              1103  keywordParser.exitEmpty
             2A0              110E  keywordParser.notLetVarAssignment
             2A9              1117  runLine
             2B6              1124  runLine.stringPortionProcess
             2FB              1169  runLine.gotoNextLine
             325              1193  runLine.gotoNextLineCommon
             331              119F  runLine.exit
             332              11A0  runLine.ctrlFlowHandler
             35A              11C8  runLine.badLineNumber
             366              11D4  runLine.tron
             392              1200  runLine.break
             3BB              1229  spaceSkip
             3C5              1233  spaceSkip.exit
             3C6              1234  getVarNameLength
             3D4              1242  getVarNameLength.search
             3EB              1259  getVarNameLength.exit
             3F3              1261  getVarType
             40A              1278  getVarType.exit
             40E              127C  handleAlgebraicExpression
             419              1287  handleAlgebraicExpression.hae0
             424              1292  handleAlgebraicExpression.hae1
             434              12A2  handleAlgebraicExpression.hae2
             43F              12AD  handleAlgebraicExpression.relationals
             45C              12CA  handleAlgebraicExpression.handleSecondLevel
             461              12CF  handleAlgebraicExpression.parseAdditiveOperators
             475              12E3  handleAlgebraicExpression.processAdd
             47B              12E9  handleAlgebraicExpression.processMinus
             486              12F4  handleAlgebraicExpression.handleFirstLevelSkip
             489              12F7  handleAlgebraicExpression.handleFirstLevel
             48E              12FC  handleAlgebraicExpression.parseProductOperators
             4A4              1312  handleAlgebraicExpression.processDiv
             4B7              1325  handleAlgebraicExpression.handleZerothLevelSkip
             4BA              1328  handleAlgebraicExpression.handleZerothLevel
             4D0              133E  handleAlgebraicExpression.notBracket
             4D4              1342  handleAlgebraicExpression.varConstCheck
             4E5              1353  handleAlgebraicExpression.varOrRNDFound
             501              136F  handleAlgebraicExpression.exit
             502              1370  handleAlgebraicExpression.exponentFound
             504              1372  handleAlgebraicExpression.varFound
             51B              1389  handleAlgebraicExpression.closeBracket
             523              1391  handleAlgebraicExpression.error
             52F              139D  getNumericVariable
             54F              13BD  getNumericVariable.exit
             553              13C1  getNumericVariable.noVar
             557              13C5  getNumericVariable.stringFoundError
             563              13D1  setNumericVariable
             583              13F1  setNumericVariable.exit
             587              13F5  setNumericVariable.makeEditInteger
             58E              13FC  setNumericVariable.stringFoundError
             59A              1408  setStringVariable
             5A7              1415  findOtherExpressionsOnLine
             5B0              141E  findOtherExpressionsOnLine.exit
             5B1              141F  funTbl
             628              1496  thenStr
             62F              149D  elseStr
             691              14FF  badCmd
             69D              150B  endProg
             6A2              1510  tron
             6AA              1518  troff
             6B2              1520  memRead
             6B2              1520  memWrite
             6B2              1520  byteRead
             6B2              1520  byteWrite
             6B3              1521  oldSchoolAssignemnt
             6B8              1526  variableAssignment
             6FB              1569  variableAssignment.stringAssignment
             71E              158C  variableAssignment.syntaxError
             72A              1598  variableAssignment.typError
             736              15A4  newProgram
             798              1606  listProgram
             79F              160D  listProgram.printLines
             7D3              1641  listProgram.exit
             7D4              1642  runProgram
             7F3              1661  printStatement
             7F3              1661  printStatement.printStart
             809              1677  printStatement.printExpr
             80C              167A  printStatement.printExpr1
             81D              168B  printStatement.printStringVar
             84A              16B8  printStatement.stringPrint
             862              16D0  printStatement.openSpeechMark
             865              16D3  printStatement.psvexitColon
             868              16D6  printStatement.psvexit
             875              16E3  printStatement.closespeechmarks
             884              16F2  printStatement.continue
             88E              16FC  getInput
             898              1706  getInput.customPrompt
             89B              1709  getInput.cp0
             8A4              1712  getInput.error
             8B0              171E  getInput.printCustomPrompt
             8B3              1721  getInput.pcp0
             8BF              172D  getInput.stopPrompt
             8CD              173B  getInput.defaultPrompt
             8D7              1745  getInput.noDefaultPrompt
             915              1783  getInput.handleNumeric
             924              1792  getInput.handleString
             92F              179D  getInput.commonExit
             930              179E  returnToDOS
             93C              17AA  cls
             941              17AF  dbgr
             961              17CF  dbgr.farReturn
             98A              17F8  retScan
             98A              17F8  wendScan
             98A              17F8  nextScan
             98A              17F8  goto
             99F              180D  forLoop
             9A0              180E  next
             9A1              180F  gosub
             9A2              1810  return
             9A3              1811  while
             9A4              1812  wend
             9A5              1813  handleIf
             9CD              183B  handleIf.hi0
             9CE              183C  handleIf.else
             9D4              1842  handleIf.noElse0
             9D4              1842  handleIf.noElse
             9D5              1843  handleIf.error
             9E1              184F  decimalToHex
             9E6              1854  decimalToHex.processDigits
             A02              1870  decimalToHex.exit
             A09              1877  printdecimalword
             A39              18A7  printdecimalword.pdw0
             A49              18B7  printdecimalword.pdw1
             A62              18D0  allocateBlock
             A63              18D1  allocateBlock.ab0
             A94              1902  allocateBlock.exit
             A96              1904  allocateBlock.memoryFull
             AA2              1910  allocateBlock.firstAllocation
             AC2              1930  findVariable
             AD7              1945  findVariable.search
             AE3              1951  findVariable.invalid
             AF2              1960  findVariable.varFound
             B01              196F  findVariable.datFound
             B13              1981  findVariable.varNotFound
             B1D              198B  findVariable.exit
             B23              1991  findFirstLine
             B32              19A0  searchForProgramLine
             B42              19B0  searchForProgramLine.search
             B55              19C3  searchForProgramLine.lineFound
             B56              19C4  insertProgramLine
             B76              19E4  insertProgramLine.walk
             B8A              19F8  insertProgramLine.candidate
             B99              1A07  insertProgramLine.sort
             BAC              1A1A  insertProgramLine.skipLink
             BBA              1A28  insertProgramLine.first
             BCC              1A3A  insertProgramLine.exit
             BD2              1A40  makeEditInteger
             BE5              1A53  makeEditInteger.newVar
             C11              1A7F  makeEditInteger.error
             C1D              1A8B  makeEditString
             C57              1AC5  makeEditString.strcopy
             C6B              1AD9  makeEditString.error
             C77              1AE5  terminatedstrcpy
             C78              1AE6  terminatedstrcpy.copy
             C88              1AF6  terminatedstrcpy.exit
             C8A              1AF8  strcpy
             C93              1B01  strlen
             C97              1B05  strlen.search
             C9E              1B0C  strlen.exit
             CA1              1B0F  memoryDetection
             CAA              1B18  memoryDetection.findStartAddr
             CB1              1B1F  memoryDetection.fsa1
             CE1              1B4F  memoryDetection.exit
             CE2              1B50  memoryDetection.worstCase
             D03              1B71  prompt
             D08              1B76  mainmsg
             D1C              1B8A  bytemsg
             D2A              1B98  crlf
             D2D              1B9B  errmsg
             D35              1BA3  numbers
             D3F              1BAD  varChrs
             D65              1BD3  noMem
             D75              1BE3  syntax
             D84              1BF2  typeError
             D94              1C02  lineNoXist
             DAC              1C1A  breakmsg
             DB6              1C24  stkOvflw
             DC7              1C35  nowend
             DDC              1C4A  noWhile
             DF1              1C5F  noFor
             E04              1C72  noNext
             E17              1C85  noReturn

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             E2E              1C9C  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  oflowbuff
              50                50  stack
             D90               D90  stacktop
             D98               D98  inString
             E98               E98  digitString
             EC8               EC8  minMemAddr
             ED0               ED0  maxMemAddr
             ED8               ED8  strLen
             ED9               ED9  stateByte
             EDA               EDA  mcbChain
             EE2               EE2  lastBlock
             EEA               EEA  firstLinPtr
             EF2               EF2  firstLinNum
             EF4               EF4  currentLine
             EF6               EF6  bssLen


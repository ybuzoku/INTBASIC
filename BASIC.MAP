
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               767  000006E4  progbits  resSeg
            180A               767               767  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 6E4
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  767
align:                    1
follows:   resSeg
vstart:                180A
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000000E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000100  maxLineLen
00000030  digitStringLen
0000001C  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              E8              118B  mainLoop
             10D              11B0  criticalError
             117              11BA  printdecimalword
             147              11EA  printdecimalword.pdw0
             157              11FA  printdecimalword.pdw1
             170              1213  getLineInput
             18D              1230  getLineInput.getChar
             1A9              124C  getLineInput.glibspace
             1D2              1275  getLineInput.gliCheckCase
             1E1              1284  getLineInput.gliccStore
             1EA              128D  getLineInput.gliExtendedChar
             1EC              128F  getLineInput.gliExit
             1FC              129F  getLineInput.gliFull
             208              12AB  ttyOutChar
             20D              12B0  ttyOutString
             215              12B8  ttyIn
             21A              12BD  saveExecuteLine
             22A              12CD  saveExecuteLine.saveLine
             22A              12CD  executeExpression
             23B              12DE  executeExpression.functionFinderLoop
             25F              1302  executeExpression.functionFound
             25F              1302  executeExpression.exit
             260              1303  executeExpression.variableAssignment
             29E              1341  executeExpression.exitError
             2AD              1350  executeExpression.stringAssignment
             2AD              1350  spaceSkip
             2B7              135A  spaceSkip.exit
             2B8              135B  getVarNameLength
             2C6              1369  getVarNameLength.search
             2DD              1380  getVarNameLength.exit
             2E5              1388  getVarType
             302              13A5  handleAlgebraicExpression
             307              13AA  handleAlgebraicExpression.parseAdditiveOperators
             31B              13BE  handleAlgebraicExpression.processAdd
             321              13C4  handleAlgebraicExpression.processMinus
             32C              13CF  handleAlgebraicExpression.handleSecondLevelSkip
             32F              13D2  handleAlgebraicExpression.handleSecondLevel
             334              13D7  handleAlgebraicExpression.parseProductOperators
             34A              13ED  handleAlgebraicExpression.processDiv
             35D              1400  handleAlgebraicExpression.handleThirdLevelSkip
             360              1403  handleAlgebraicExpression.handleThirdLevel
             376              1419  handleAlgebraicExpression.notBracket
             37A              141D  handleAlgebraicExpression.varConstCheck
             38B              142E  handleAlgebraicExpression.varOrRNDFound
             3A4              1447  handleAlgebraicExpression.exponentFound
             3A6              1449  handleAlgebraicExpression.varFound
             3AC              144F  handleAlgebraicExpression.closeBracket
             3B4              1457  handleAlgebraicExpression.exit
             3B5              1458  handleAlgebraicExpression.error
             3C1              1464  getNumericVariable
             3DC              147F  getNumericVariable.stringFoundError
             3E8              148B  setNumericVariable
             40B              14AE  setNumericVariable.exit
             40F              14B2  setNumericVariable.makeEditInteger
             416              14B9  setNumericVariable.stringFoundError
             422              14C5  funTbl
             48B              152E  newProgram
             48B              152E  listProgram
             48B              152E  runProgram
             48B              152E  printStatement
             48B              152E  getInput
             48B              152E  handleIf
             48B              152E  fancyJmp
             48B              152E  returnToDOS
             48C              152F  decimalToHex
             491              1534  decimalToHex.processDigits
             4AD              1550  decimalToHex.exit
             4B4              1557  allocateBlock
             4E6              1589  allocateBlock.memoryFull
             4F1              1594  allocateBlock.firstAllocation
             510              15B3  findVariable
             525              15C8  findVariable.search
             52B              15CE  findVariable.invalid
             53A              15DD  findVariable.varFound
             545              15E8  findVariable.varNotFound
             54F              15F2  findVariable.exit
             555              15F8  findFirstLine
             564              1607  searchForProgramLine
             56B              160E  searchForProgramLine.search
             57D              1620  searchForProgramLine.lineFound
             57E              1621  insertProgramLine
             59E              1641  insertProgramLine.walk
             5B2              1655  insertProgramLine.candidate
             5C1              1664  insertProgramLine.sort
             5D4              1677  insertProgramLine.skipLink
             5E2              1685  insertProgramLine.first
             5F4              1697  insertProgramLine.exit
             5FA              169D  makeEditVariable
             612              16B5  makeEditVariable.string
             617              16BA  makeEditVariable.exit
             61B              16BE  makeEditInteger
             62E              16D1  makeEditInteger.newVar
             65D              1700  makeEditInteger.error
             669              170C  makeEditString
             675              1718  strcpy
             67E              1721  memoryDetection
             687              172A  memoryDetection.findStartAddr
             68E              1731  memoryDetection.fsa1
             6BE              1761  memoryDetection.exit
             6BF              1762  memoryDetection.worstCase
             6E0              1783  prompt
             6E5              1788  mainmsg
             6F9              179C  bytemsg
             707              17AA  crlf
             70A              17AD  errmsg
             712              17B5  numbers
             71C              17BF  varChrs
             738              17DB  noMem
             748              17EB  syntax
             757              17FA  typeError

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             767              180A  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


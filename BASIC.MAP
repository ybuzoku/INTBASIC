
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               C71  00000BEE  progbits  resSeg
            1D14               C71               C71  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 BEE
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  C71
align:                    1
follows:   resSeg
vstart:                1D14
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000001  breakBit
00000002  traceBit
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              BF              1162  mainLoop
              E2              1185  mainLoop.ml0
              F6              1199  mainLoop.saveLine
             124              11C7  mainLoop.commonProc
             13E              11E1  mainLoop.lineDoesntExist
             145              11E8  criticalError
             14F              11F2  ctrlBreakHandler
             158              11FB  setHandler
             178              121B  getLineInput
             195              1238  getLineInput.getChar
             1B1              1254  getLineInput.glibspace
             1DA              127D  getLineInput.gliCheckCase
             1E9              128C  getLineInput.gliccStore
             1F2              1295  getLineInput.gliExtendedChar
             1F4              1297  getLineInput.gliExit
             204              12A7  getLineInput.gliFull
             210              12B3  ttyOutChar
             215              12B8  ttyOutString
             21D              12C0  ttyIn
             222              12C5  ttyClear
             23B              12DE  executeExpression
             24C              12EF  executeExpression.functionFinderLoop
             270              1313  executeExpression.functionFound
             284              1327  executeExpression.exit
             285              1328  executeExpression.variableAssignment
             2C8              136B  executeExpression.stringAssignment
             2EB              138E  executeExpression.syntaxError
             2F7              139A  executeExpression.typError
             303              13A6  mainProcessing
             315              13B8  mainProcessing.mp0
             32F              13D2  mainProcessing.tron
             34B              13EE  mainProcessing.break
             374              1417  spaceSkip
             37E              1421  spaceSkip.exit
             37F              1422  getVarNameLength
             38D              1430  getVarNameLength.search
             3A4              1447  getVarNameLength.exit
             3AC              144F  getVarType
             3C3              1466  getVarType.exit
             3C7              146A  handleAlgebraicExpression
             3D2              1475  handleAlgebraicExpression.hae0
             3DD              1480  handleAlgebraicExpression.hae1
             3ED              1490  handleAlgebraicExpression.hae2
             3F8              149B  handleAlgebraicExpression.relationals
             415              14B8  handleAlgebraicExpression.handleSecondLevel
             41A              14BD  handleAlgebraicExpression.parseAdditiveOperators
             42E              14D1  handleAlgebraicExpression.processAdd
             434              14D7  handleAlgebraicExpression.processMinus
             43F              14E2  handleAlgebraicExpression.handleFirstLevelSkip
             442              14E5  handleAlgebraicExpression.handleFirstLevel
             447              14EA  handleAlgebraicExpression.parseProductOperators
             45D              1500  handleAlgebraicExpression.processDiv
             470              1513  handleAlgebraicExpression.handleZerothLevelSkip
             473              1516  handleAlgebraicExpression.handleZerothLevel
             489              152C  handleAlgebraicExpression.notBracket
             48D              1530  handleAlgebraicExpression.varConstCheck
             49E              1541  handleAlgebraicExpression.varOrRNDFound
             4BA              155D  handleAlgebraicExpression.exit
             4BB              155E  handleAlgebraicExpression.exponentFound
             4BD              1560  handleAlgebraicExpression.varFound
             4D4              1577  handleAlgebraicExpression.closeBracket
             4DC              157F  handleAlgebraicExpression.error
             4E8              158B  getNumericVariable
             508              15AB  getNumericVariable.exit
             50C              15AF  getNumericVariable.noVar
             510              15B3  getNumericVariable.stringFoundError
             51C              15BF  setNumericVariable
             53C              15DF  setNumericVariable.exit
             540              15E3  setNumericVariable.makeEditInteger
             547              15EA  setNumericVariable.stringFoundError
             553              15F6  setStringVariable
             560              1603  findOtherExpressionsOnLine
             569              160C  findOtherExpressionsOnLine.exit
             56A              160D  funTbl
             5E0              1683  thenStr
             5E7              168A  elseStr
             5EF              1692  badCmd
             5FB              169E  tron
             603              16A6  troff
             60B              16AE  oldSchoolAssignemnt
             61D              16C0  newProgram
             67F              1722  listProgram
             686              1729  listProgram.printLines
             6BA              175D  listProgram.exit
             6BB              175E  runProgram
             6C2              1765  runProgram.runLines
             6EA              178D  runProgram.exit
             6EB              178E  printStatement
             6F3              1796  printStatement.printStart
             709              17AC  printStatement.printExpr
             70C              17AF  printStatement.printExpr1
             71D              17C0  printStatement.printStringVar
             74A              17ED  printStatement.stringPrint
             762              1805  printStatement.openSpeechMark
             765              1808  printStatement.psvexitColon
             768              180B  printStatement.psvexit
             775              1818  printStatement.closespeechmarks
             781              1824  printStatement.continue
             78B              182E  getInput
             78E              1831  handleIf
             7C9              186C  handleIf.else
             7CE              1871  handleIf.e0
             7F0              1893  handleIf.noElse0
             7F3              1896  handleIf.noElse
             7F4              1897  handleIf.error
             800              18A3  fancyJmp
             82E              18D1  fancyJmp.unknownLineNumber
             83F              18E2  forLoop
             842              18E5  returnToDOS
             84E              18F1  cls
             853              18F6  dbgr
             873              1916  dbgr.farReturn
             89C              193F  decimalToHex
             8A1              1944  decimalToHex.processDigits
             8BD              1960  decimalToHex.exit
             8C4              1967  printdecimalword
             8F4              1997  printdecimalword.pdw0
             904              19A7  printdecimalword.pdw1
             91D              19C0  allocateBlock
             91E              19C1  allocateBlock.ab0
             94F              19F2  allocateBlock.exit
             951              19F4  allocateBlock.memoryFull
             95D              1A00  allocateBlock.firstAllocation
             97D              1A20  findVariable
             992              1A35  findVariable.search
             99E              1A41  findVariable.invalid
             9AD              1A50  findVariable.varFound
             9BC              1A5F  findVariable.datFound
             9CE              1A71  findVariable.varNotFound
             9D8              1A7B  findVariable.exit
             9DE              1A81  findFirstLine
             9ED              1A90  searchForProgramLine
             9FD              1AA0  searchForProgramLine.search
             A10              1AB3  searchForProgramLine.lineFound
             A11              1AB4  insertProgramLine
             A31              1AD4  insertProgramLine.walk
             A45              1AE8  insertProgramLine.candidate
             A54              1AF7  insertProgramLine.sort
             A67              1B0A  insertProgramLine.skipLink
             A75              1B18  insertProgramLine.first
             A87              1B2A  insertProgramLine.exit
             A8D              1B30  makeEditInteger
             AA0              1B43  makeEditInteger.newVar
             ACC              1B6F  makeEditInteger.error
             AD8              1B7B  makeEditString
             B12              1BB5  makeEditString.strcopy
             B26              1BC9  makeEditString.error
             B32              1BD5  terminatedstrcpy
             B33              1BD6  terminatedstrcpy.copy
             B43              1BE6  terminatedstrcpy.exit
             B45              1BE8  strcpy
             B4E              1BF1  strlen
             B52              1BF5  strlen.search
             B59              1BFC  strlen.exit
             B5C              1BFF  memoryDetection
             B65              1C08  memoryDetection.findStartAddr
             B6C              1C0F  memoryDetection.fsa1
             B9C              1C3F  memoryDetection.exit
             B9D              1C40  memoryDetection.worstCase
             BBE              1C61  prompt
             BC3              1C66  mainmsg
             BD7              1C7A  bytemsg
             BE5              1C88  crlf
             BE8              1C8B  errmsg
             BF0              1C93  numbers
             BFA              1C9D  varChrs
             C20              1CC3  noMem
             C30              1CD3  syntax
             C3F              1CE2  typeError
             C4F              1CF2  lineNoXist
             C67              1D0A  breakmsg

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             C71              1D14  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


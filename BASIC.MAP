
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               9FB  00000978  progbits  resSeg
            1A9E               9FB               9FB  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 978
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  9FB
align:                    1
follows:   resSeg
vstart:                1A9E
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              B1              1154  mainLoop
              CD              1170  mainLoop.ml0
              DC              117F  mainLoop.ml1
              EB              118E  mainLoop.saveLine
             119              11BC  mainLoop.commonProc
             133              11D6  mainLoop.lineDoesntExist
             13A              11DD  criticalError
             144              11E7  getLineInput
             161              1204  getLineInput.getChar
             17D              1220  getLineInput.glibspace
             1A6              1249  getLineInput.gliCheckCase
             1B5              1258  getLineInput.gliccStore
             1BE              1261  getLineInput.gliExtendedChar
             1C0              1263  getLineInput.gliExit
             1D0              1273  getLineInput.gliFull
             1DC              127F  ttyOutChar
             1E1              1284  ttyOutString
             1E9              128C  ttyIn
             1EE              1291  ttyClear
             207              12AA  executeExpression
             218              12BB  executeExpression.functionFinderLoop
             23C              12DF  executeExpression.functionFound
             250              12F3  executeExpression.exit
             251              12F4  executeExpression.variableAssignment
             294              1337  executeExpression.stringAssignment
             2B7              135A  executeExpression.syntaxError
             2C3              1366  executeExpression.typError
             2CF              1372  spaceSkip
             2D9              137C  spaceSkip.exit
             2DA              137D  getVarNameLength
             2E8              138B  getVarNameLength.search
             2FF              13A2  getVarNameLength.exit
             307              13AA  getVarType
             31E              13C1  getVarType.exit
             322              13C5  handleAlgebraicExpression
             32D              13D0  handleAlgebraicExpression.hae0
             338              13DB  handleAlgebraicExpression.hae1
             348              13EB  handleAlgebraicExpression.hae2
             353              13F6  handleAlgebraicExpression.relationals
             375              1418  handleAlgebraicExpression.parseAdditiveOperators
             389              142C  handleAlgebraicExpression.processAdd
             38F              1432  handleAlgebraicExpression.processMinus
             39A              143D  handleAlgebraicExpression.handleSecondLevelSkip
             39D              1440  handleAlgebraicExpression.handleSecondLevel
             3A2              1445  handleAlgebraicExpression.parseProductOperators
             3B8              145B  handleAlgebraicExpression.processDiv
             3CB              146E  handleAlgebraicExpression.handleThirdLevelSkip
             3CE              1471  handleAlgebraicExpression.handleThirdLevel
             3E4              1487  handleAlgebraicExpression.notBracket
             3E8              148B  handleAlgebraicExpression.varConstCheck
             3F9              149C  handleAlgebraicExpression.varOrRNDFound
             415              14B8  handleAlgebraicExpression.exit
             416              14B9  handleAlgebraicExpression.exponentFound
             418              14BB  handleAlgebraicExpression.varFound
             42F              14D2  handleAlgebraicExpression.closeBracket
             437              14DA  handleAlgebraicExpression.error
             443              14E6  getNumericVariable
             463              1506  getNumericVariable.exit
             467              150A  getNumericVariable.noVar
             46B              150E  getNumericVariable.stringFoundError
             477              151A  setNumericVariable
             497              153A  setNumericVariable.exit
             49B              153E  setNumericVariable.makeEditInteger
             4A2              1545  setNumericVariable.stringFoundError
             4AE              1551  setStringVariable
             4BB              155E  findOtherExpressionsOnLine
             4C4              1567  findOtherExpressionsOnLine.exit
             4C5              1568  funTbl
             51C              15BF  oldSchoolAssignemnt
             52C              15CF  newProgram
             580              1623  listProgram
             583              1626  runProgram
             586              1629  printStatement
             58C              162F  printStatement.printStart
             5A2              1645  printStatement.printExpr
             5BC              165F  printStatement.printStringVar
             5EC              168F  printStatement.stringPrint
             604              16A7  printStatement.psvexit
             611              16B4  printStatement.closespeechmarks
             618              16BB  getInput
             61B              16BE  handleIf
             61E              16C1  fancyJmp
             621              16C4  returnToDOS
             624              16C7  forLoop
             627              16CA  cls
             62C              16CF  dbgr
             62F              16D2  decimalToHex
             634              16D7  decimalToHex.processDigits
             650              16F3  decimalToHex.exit
             657              16FA  printdecimalword
             687              172A  printdecimalword.pdw0
             697              173A  printdecimalword.pdw1
             6B0              1753  allocateBlock
             6E2              1785  allocateBlock.exit
             6E4              1787  allocateBlock.memoryFull
             6F0              1793  allocateBlock.firstAllocation
             70F              17B2  findVariable
             724              17C7  findVariable.search
             730              17D3  findVariable.invalid
             73F              17E2  findVariable.varFound
             74E              17F1  findVariable.datFound
             760              1803  findVariable.varNotFound
             76A              180D  findVariable.exit
             770              1813  findFirstLine
             77F              1822  searchForProgramLine
             78F              1832  searchForProgramLine.search
             7A1              1844  searchForProgramLine.lineFound
             7A2              1845  insertProgramLine
             7C5              1868  insertProgramLine.walk
             7D9              187C  insertProgramLine.candidate
             7E8              188B  insertProgramLine.sort
             7FB              189E  insertProgramLine.skipLink
             809              18AC  insertProgramLine.first
             81B              18BE  insertProgramLine.exit
             821              18C4  makeEditInteger
             834              18D7  makeEditInteger.newVar
             860              1903  makeEditInteger.error
             86C              190F  makeEditString
             8A6              1949  makeEditString.strcopy
             8BA              195D  makeEditString.error
             8C6              1969  terminatedstrcpy
             8C7              196A  terminatedstrcpy.copy
             8D7              197A  terminatedstrcpy.exit
             8D9              197C  strcpy
             8E2              1985  strlen
             8E6              1989  strlen.search
             8ED              1990  strlen.exit
             8F0              1993  memoryDetection
             8F9              199C  memoryDetection.findStartAddr
             900              19A3  memoryDetection.fsa1
             930              19D3  memoryDetection.exit
             931              19D4  memoryDetection.worstCase
             952              19F5  prompt
             957              19FA  mainmsg
             96B              1A0E  bytemsg
             979              1A1C  crlf
             97C              1A1F  errmsg
             984              1A27  numbers
             98E              1A31  varChrs
             9B4              1A57  noMem
             9C4              1A67  syntax
             9D3              1A76  typeError
             9E3              1A86  lineNoXist

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             9FB              1A9E  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen



- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               91B  00000898  progbits  resSeg
            19BE               91B               91B  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 898
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  91B
align:                    1
follows:   resSeg
vstart:                19BE
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              B1              1154  mainLoop
              CD              1170  mainLoop.ml0
              DC              117F  mainLoop.ml1
              EB              118E  mainLoop.saveLine
             119              11BC  mainLoop.commonProc
             133              11D6  mainLoop.lineDoesntExist
             13A              11DD  criticalError
             144              11E7  getLineInput
             161              1204  getLineInput.getChar
             17D              1220  getLineInput.glibspace
             1A6              1249  getLineInput.gliCheckCase
             1B5              1258  getLineInput.gliccStore
             1BE              1261  getLineInput.gliExtendedChar
             1C0              1263  getLineInput.gliExit
             1D0              1273  getLineInput.gliFull
             1DC              127F  ttyOutChar
             1E1              1284  ttyOutString
             1E9              128C  ttyIn
             1EE              1291  ttyClear
             207              12AA  executeExpression
             218              12BB  executeExpression.functionFinderLoop
             23C              12DF  executeExpression.functionFound
             250              12F3  executeExpression.exit
             251              12F4  executeExpression.variableAssignment
             28C              132F  executeExpression.exitError
             298              133B  executeExpression.stringAssignment
             29B              133E  spaceSkip
             2A5              1348  spaceSkip.exit
             2A6              1349  getVarNameLength
             2B4              1357  getVarNameLength.search
             2CB              136E  getVarNameLength.exit
             2D3              1376  getVarType
             2EA              138D  getVarType.exit
             2EE              1391  handleAlgebraicExpression
             2F9              139C  handleAlgebraicExpression.hae0
             304              13A7  handleAlgebraicExpression.hae1
             314              13B7  handleAlgebraicExpression.hae2
             31F              13C2  handleAlgebraicExpression.relationals
             341              13E4  handleAlgebraicExpression.parseAdditiveOperators
             355              13F8  handleAlgebraicExpression.processAdd
             35B              13FE  handleAlgebraicExpression.processMinus
             366              1409  handleAlgebraicExpression.handleSecondLevelSkip
             369              140C  handleAlgebraicExpression.handleSecondLevel
             36E              1411  handleAlgebraicExpression.parseProductOperators
             384              1427  handleAlgebraicExpression.processDiv
             397              143A  handleAlgebraicExpression.handleThirdLevelSkip
             39A              143D  handleAlgebraicExpression.handleThirdLevel
             3B0              1453  handleAlgebraicExpression.notBracket
             3B4              1457  handleAlgebraicExpression.varConstCheck
             3C5              1468  handleAlgebraicExpression.varOrRNDFound
             3E1              1484  handleAlgebraicExpression.exit
             3E2              1485  handleAlgebraicExpression.exponentFound
             3E4              1487  handleAlgebraicExpression.varFound
             3FB              149E  handleAlgebraicExpression.closeBracket
             403              14A6  handleAlgebraicExpression.error
             40F              14B2  getNumericVariable
             42F              14D2  getNumericVariable.exit
             433              14D6  getNumericVariable.noVar
             437              14DA  getNumericVariable.stringFoundError
             443              14E6  setNumericVariable
             463              1506  setNumericVariable.exit
             467              150A  setNumericVariable.makeEditInteger
             46E              1511  setNumericVariable.stringFoundError
             47A              151D  findOtherExpressionsOnLine
             483              1526  findOtherExpressionsOnLine.exit
             484              1527  funTbl
             4D5              1578  newProgram
             529              15CC  listProgram
             52C              15CF  runProgram
             52F              15D2  printStatement
             535              15D8  printStatement.printStart
             547              15EA  printStatement.printExpr
             561              1604  printStatement.printStringVar
             57C              161F  printStatement.stringPrint
             594              1637  printStatement.psvexit
             5A4              1647  getInput
             5A7              164A  handleIf
             5AA              164D  fancyJmp
             5AD              1650  returnToDOS
             5B0              1653  forLoop
             5B3              1656  cls
             5B8              165B  dbgr
             5BB              165E  decimalToHex
             5C0              1663  decimalToHex.processDigits
             5DC              167F  decimalToHex.exit
             5E3              1686  printdecimalword
             613              16B6  printdecimalword.pdw0
             623              16C6  printdecimalword.pdw1
             63C              16DF  allocateBlock
             66E              1711  allocateBlock.memoryFull
             679              171C  allocateBlock.firstAllocation
             698              173B  findVariable
             6AD              1750  findVariable.search
             6B9              175C  findVariable.invalid
             6C8              176B  findVariable.varFound
             6D3              1776  findVariable.datFound
             6E1              1784  findVariable.varNotFound
             6EB              178E  findVariable.exit
             6F1              1794  findFirstLine
             700              17A3  searchForProgramLine
             710              17B3  searchForProgramLine.search
             722              17C5  searchForProgramLine.lineFound
             723              17C6  insertProgramLine
             746              17E9  insertProgramLine.walk
             75A              17FD  insertProgramLine.candidate
             769              180C  insertProgramLine.sort
             77C              181F  insertProgramLine.skipLink
             78A              182D  insertProgramLine.first
             79C              183F  insertProgramLine.exit
             7A2              1845  makeEditInteger
             7B5              1858  makeEditInteger.newVar
             7E1              1884  makeEditInteger.error
             7ED              1890  makeEditString
             7F9              189C  strcpy
             802              18A5  strlen
             806              18A9  strlen.search
             80D              18B0  strlen.exit
             810              18B3  memoryDetection
             819              18BC  memoryDetection.findStartAddr
             820              18C3  memoryDetection.fsa1
             850              18F3  memoryDetection.exit
             851              18F4  memoryDetection.worstCase
             872              1915  prompt
             877              191A  mainmsg
             88B              192E  bytemsg
             899              193C  crlf
             89C              193F  errmsg
             8A4              1947  numbers
             8AE              1951  varChrs
             8D4              1977  noMem
             8E4              1987  syntax
             8F3              1996  typeError
             903              19A6  lineNoXist

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             91B              19BE  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


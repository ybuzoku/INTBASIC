
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               BD4  00000B51  progbits  resSeg
            1C77               BD4               BD4  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 B51
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  BD4
align:                    1
follows:   resSeg
vstart:                1C77
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              BF              1162  mainLoop
              E2              1185  mainLoop.ml0
              F1              1194  mainLoop.ml1
              F7              119A  mainLoop.saveLine
             125              11C8  mainLoop.commonProc
             13F              11E2  mainLoop.lineDoesntExist
             146              11E9  criticalError
             150              11F3  ctrlBreakHandler
             159              11FC  setHandler
             179              121C  getLineInput
             196              1239  getLineInput.getChar
             1B2              1255  getLineInput.glibspace
             1DB              127E  getLineInput.gliCheckCase
             1EA              128D  getLineInput.gliccStore
             1F3              1296  getLineInput.gliExtendedChar
             1F5              1298  getLineInput.gliExit
             205              12A8  getLineInput.gliFull
             211              12B4  ttyOutChar
             216              12B9  ttyOutString
             21E              12C1  ttyIn
             223              12C6  ttyClear
             23C              12DF  executeExpression
             24D              12F0  executeExpression.functionFinderLoop
             271              1314  executeExpression.functionFound
             285              1328  executeExpression.exit
             286              1329  executeExpression.variableAssignment
             2C9              136C  executeExpression.stringAssignment
             2EC              138F  executeExpression.syntaxError
             2F8              139B  executeExpression.typError
             304              13A7  mainProcessing
             327              13CA  mainProcessing.break
             352              13F5  spaceSkip
             35C              13FF  spaceSkip.exit
             35D              1400  getVarNameLength
             36B              140E  getVarNameLength.search
             382              1425  getVarNameLength.exit
             38A              142D  getVarType
             3A1              1444  getVarType.exit
             3A5              1448  handleAlgebraicExpression
             3B0              1453  handleAlgebraicExpression.hae0
             3BB              145E  handleAlgebraicExpression.hae1
             3CB              146E  handleAlgebraicExpression.hae2
             3D6              1479  handleAlgebraicExpression.relationals
             3F3              1496  handleAlgebraicExpression.handleSecondLevel
             3F8              149B  handleAlgebraicExpression.parseAdditiveOperators
             40C              14AF  handleAlgebraicExpression.processAdd
             412              14B5  handleAlgebraicExpression.processMinus
             41D              14C0  handleAlgebraicExpression.handleFirstLevelSkip
             420              14C3  handleAlgebraicExpression.handleFirstLevel
             425              14C8  handleAlgebraicExpression.parseProductOperators
             43B              14DE  handleAlgebraicExpression.processDiv
             44E              14F1  handleAlgebraicExpression.handleZerothLevelSkip
             451              14F4  handleAlgebraicExpression.handleZerothLevel
             467              150A  handleAlgebraicExpression.notBracket
             46B              150E  handleAlgebraicExpression.varConstCheck
             47C              151F  handleAlgebraicExpression.varOrRNDFound
             498              153B  handleAlgebraicExpression.exit
             499              153C  handleAlgebraicExpression.exponentFound
             49B              153E  handleAlgebraicExpression.varFound
             4B2              1555  handleAlgebraicExpression.closeBracket
             4BA              155D  handleAlgebraicExpression.error
             4C6              1569  getNumericVariable
             4E6              1589  getNumericVariable.exit
             4EA              158D  getNumericVariable.noVar
             4EE              1591  getNumericVariable.stringFoundError
             4FA              159D  setNumericVariable
             51A              15BD  setNumericVariable.exit
             51E              15C1  setNumericVariable.makeEditInteger
             525              15C8  setNumericVariable.stringFoundError
             531              15D4  setStringVariable
             53E              15E1  findOtherExpressionsOnLine
             547              15EA  findOtherExpressionsOnLine.exit
             548              15EB  funTbl
             5AF              1652  thenStr
             5B6              1659  elseStr
             5BE              1661  badCmd
             5CA              166D  oldSchoolAssignemnt
             5DC              167F  newProgram
             63E              16E1  listProgram
             645              16E8  listProgram.printLines
             679              171C  listProgram.exit
             67A              171D  runProgram
             681              1724  runProgram.runLines
             6A9              174C  runProgram.exit
             6AA              174D  printStatement
             6B2              1755  printStatement.printStart
             6C8              176B  printStatement.printExpr
             6CB              176E  printStatement.printExpr1
             6DC              177F  printStatement.printStringVar
             709              17AC  printStatement.stringPrint
             721              17C4  printStatement.openSpeechMark
             724              17C7  printStatement.psvexitColon
             727              17CA  printStatement.psvexit
             734              17D7  printStatement.closespeechmarks
             73B              17DE  printStatement.continue
             745              17E8  getInput
             748              17EB  handleIf
             75F              1802  handleIf.else
             760              1803  fancyJmp
             791              1834  fancyJmp.unknownLineNumber
             7A2              1845  forLoop
             7A5              1848  returnToDOS
             7B1              1854  cls
             7B6              1859  dbgr
             7D6              1879  dbgr.farReturn
             7FF              18A2  decimalToHex
             804              18A7  decimalToHex.processDigits
             820              18C3  decimalToHex.exit
             827              18CA  printdecimalword
             857              18FA  printdecimalword.pdw0
             867              190A  printdecimalword.pdw1
             880              1923  allocateBlock
             881              1924  allocateBlock.ab0
             8B2              1955  allocateBlock.exit
             8B4              1957  allocateBlock.memoryFull
             8C0              1963  allocateBlock.firstAllocation
             8E0              1983  findVariable
             8F5              1998  findVariable.search
             901              19A4  findVariable.invalid
             910              19B3  findVariable.varFound
             91F              19C2  findVariable.datFound
             931              19D4  findVariable.varNotFound
             93B              19DE  findVariable.exit
             941              19E4  findFirstLine
             950              19F3  searchForProgramLine
             960              1A03  searchForProgramLine.search
             973              1A16  searchForProgramLine.lineFound
             974              1A17  insertProgramLine
             994              1A37  insertProgramLine.walk
             9A8              1A4B  insertProgramLine.candidate
             9B7              1A5A  insertProgramLine.sort
             9CA              1A6D  insertProgramLine.skipLink
             9D8              1A7B  insertProgramLine.first
             9EA              1A8D  insertProgramLine.exit
             9F0              1A93  makeEditInteger
             A03              1AA6  makeEditInteger.newVar
             A2F              1AD2  makeEditInteger.error
             A3B              1ADE  makeEditString
             A75              1B18  makeEditString.strcopy
             A89              1B2C  makeEditString.error
             A95              1B38  terminatedstrcpy
             A96              1B39  terminatedstrcpy.copy
             AA6              1B49  terminatedstrcpy.exit
             AA8              1B4B  strcpy
             AB1              1B54  strlen
             AB5              1B58  strlen.search
             ABC              1B5F  strlen.exit
             ABF              1B62  memoryDetection
             AC8              1B6B  memoryDetection.findStartAddr
             ACF              1B72  memoryDetection.fsa1
             AFF              1BA2  memoryDetection.exit
             B00              1BA3  memoryDetection.worstCase
             B21              1BC4  prompt
             B26              1BC9  mainmsg
             B3A              1BDD  bytemsg
             B48              1BEB  crlf
             B4B              1BEE  errmsg
             B53              1BF6  numbers
             B5D              1C00  varChrs
             B83              1C26  noMem
             B93              1C36  syntax
             BA2              1C45  typeError
             BB2              1C55  lineNoXist
             BCA              1C6D  breakmsg

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             BD4              1C77  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen



- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               BCB  00000B48  progbits  resSeg
            1C6E               BCB               BCB  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 B48
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  BCB
align:                    1
follows:   resSeg
vstart:                1C6E
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              BF              1162  mainLoop
              E2              1185  mainLoop.ml0
              F1              1194  mainLoop.ml1
             100              11A3  mainLoop.saveLine
             12E              11D1  mainLoop.commonProc
             148              11EB  mainLoop.lineDoesntExist
             14F              11F2  criticalError
             159              11FC  ctrlBreakHandler
             162              1205  setHandler
             182              1225  getLineInput
             19F              1242  getLineInput.getChar
             1BB              125E  getLineInput.glibspace
             1E4              1287  getLineInput.gliCheckCase
             1F3              1296  getLineInput.gliccStore
             1FC              129F  getLineInput.gliExtendedChar
             1FE              12A1  getLineInput.gliExit
             20E              12B1  getLineInput.gliFull
             21A              12BD  ttyOutChar
             21F              12C2  ttyOutString
             227              12CA  ttyIn
             22C              12CF  ttyClear
             245              12E8  executeExpression
             256              12F9  executeExpression.functionFinderLoop
             27A              131D  executeExpression.functionFound
             28E              1331  executeExpression.exit
             28F              1332  executeExpression.variableAssignment
             2D2              1375  executeExpression.stringAssignment
             2F5              1398  executeExpression.syntaxError
             301              13A4  executeExpression.typError
             30D              13B0  spaceSkip
             317              13BA  spaceSkip.exit
             318              13BB  getVarNameLength
             326              13C9  getVarNameLength.search
             33D              13E0  getVarNameLength.exit
             345              13E8  getVarType
             35C              13FF  getVarType.exit
             360              1403  handleAlgebraicExpression
             36B              140E  handleAlgebraicExpression.hae0
             376              1419  handleAlgebraicExpression.hae1
             386              1429  handleAlgebraicExpression.hae2
             391              1434  handleAlgebraicExpression.relationals
             3AE              1451  handleAlgebraicExpression.handleSecondLevel
             3B3              1456  handleAlgebraicExpression.parseAdditiveOperators
             3C7              146A  handleAlgebraicExpression.processAdd
             3CD              1470  handleAlgebraicExpression.processMinus
             3D8              147B  handleAlgebraicExpression.handleFirstLevelSkip
             3DB              147E  handleAlgebraicExpression.handleFirstLevel
             3E0              1483  handleAlgebraicExpression.parseProductOperators
             3F6              1499  handleAlgebraicExpression.processDiv
             409              14AC  handleAlgebraicExpression.handleZerothLevelSkip
             40C              14AF  handleAlgebraicExpression.handleZerothLevel
             422              14C5  handleAlgebraicExpression.notBracket
             426              14C9  handleAlgebraicExpression.varConstCheck
             437              14DA  handleAlgebraicExpression.varOrRNDFound
             453              14F6  handleAlgebraicExpression.exit
             454              14F7  handleAlgebraicExpression.exponentFound
             456              14F9  handleAlgebraicExpression.varFound
             46D              1510  handleAlgebraicExpression.closeBracket
             475              1518  handleAlgebraicExpression.error
             481              1524  getNumericVariable
             4A1              1544  getNumericVariable.exit
             4A5              1548  getNumericVariable.noVar
             4A9              154C  getNumericVariable.stringFoundError
             4B5              1558  setNumericVariable
             4D5              1578  setNumericVariable.exit
             4D9              157C  setNumericVariable.makeEditInteger
             4E0              1583  setNumericVariable.stringFoundError
             4EC              158F  setStringVariable
             4F9              159C  findOtherExpressionsOnLine
             502              15A5  findOtherExpressionsOnLine.exit
             503              15A6  funTbl
             56A              160D  thenStr
             571              1614  elseStr
             579              161C  badCmd
             585              1628  oldSchoolAssignemnt
             597              163A  newProgram
             5F9              169C  listProgram
             600              16A3  listProgram.printLines
             634              16D7  listProgram.exit
             635              16D8  runProgram
             63C              16DF  runProgram.runLines
             659              16FC  runProgram.rl0
             681              1724  runProgram.exit
             682              1725  runProgram.break
             6AD              1750  printStatement
             6B8              175B  printStatement.printStart
             6CE              1771  printStatement.printExpr
             6D1              1774  printStatement.printExpr1
             6E2              1785  printStatement.printStringVar
             70F              17B2  printStatement.stringPrint
             727              17CA  printStatement.openSpeechMark
             72A              17CD  printStatement.psvexitColon
             72D              17D0  printStatement.psvexit
             73A              17DD  printStatement.closespeechmarks
             741              17E4  printStatement.continue
             74B              17EE  getInput
             74E              17F1  handleIf
             757              17FA  fancyJmp
             788              182B  fancyJmp.unknownLineNumber
             799              183C  forLoop
             79C              183F  returnToDOS
             7A8              184B  cls
             7AD              1850  dbgr
             7CD              1870  dbgr.farReturn
             7F6              1899  decimalToHex
             7FB              189E  decimalToHex.processDigits
             817              18BA  decimalToHex.exit
             81E              18C1  printdecimalword
             84E              18F1  printdecimalword.pdw0
             85E              1901  printdecimalword.pdw1
             877              191A  allocateBlock
             878              191B  allocateBlock.ab0
             8A9              194C  allocateBlock.exit
             8AB              194E  allocateBlock.memoryFull
             8B7              195A  allocateBlock.firstAllocation
             8D7              197A  findVariable
             8EC              198F  findVariable.search
             8F8              199B  findVariable.invalid
             907              19AA  findVariable.varFound
             916              19B9  findVariable.datFound
             928              19CB  findVariable.varNotFound
             932              19D5  findVariable.exit
             938              19DB  findFirstLine
             947              19EA  searchForProgramLine
             957              19FA  searchForProgramLine.search
             96A              1A0D  searchForProgramLine.lineFound
             96B              1A0E  insertProgramLine
             98B              1A2E  insertProgramLine.walk
             99F              1A42  insertProgramLine.candidate
             9AE              1A51  insertProgramLine.sort
             9C1              1A64  insertProgramLine.skipLink
             9CF              1A72  insertProgramLine.first
             9E1              1A84  insertProgramLine.exit
             9E7              1A8A  makeEditInteger
             9FA              1A9D  makeEditInteger.newVar
             A26              1AC9  makeEditInteger.error
             A32              1AD5  makeEditString
             A6C              1B0F  makeEditString.strcopy
             A80              1B23  makeEditString.error
             A8C              1B2F  terminatedstrcpy
             A8D              1B30  terminatedstrcpy.copy
             A9D              1B40  terminatedstrcpy.exit
             A9F              1B42  strcpy
             AA8              1B4B  strlen
             AAC              1B4F  strlen.search
             AB3              1B56  strlen.exit
             AB6              1B59  memoryDetection
             ABF              1B62  memoryDetection.findStartAddr
             AC6              1B69  memoryDetection.fsa1
             AF6              1B99  memoryDetection.exit
             AF7              1B9A  memoryDetection.worstCase
             B18              1BBB  prompt
             B1D              1BC0  mainmsg
             B31              1BD4  bytemsg
             B3F              1BE2  crlf
             B42              1BE5  errmsg
             B4A              1BED  numbers
             B54              1BF7  varChrs
             B7A              1C1D  noMem
             B8A              1C2D  syntax
             B99              1C3C  typeError
             BA9              1C4C  lineNoXist
             BC1              1C64  breakmsg

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             BCB              1C6E  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


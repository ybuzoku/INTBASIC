
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               9F8  00000975  progbits  resSeg
            1A9B               9F8               9F8  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 975
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  9F8
align:                    1
follows:   resSeg
vstart:                1A9B
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              B1              1154  mainLoop
              CD              1170  mainLoop.ml0
              DC              117F  mainLoop.ml1
              EB              118E  mainLoop.saveLine
             119              11BC  mainLoop.commonProc
             133              11D6  mainLoop.lineDoesntExist
             13A              11DD  criticalError
             144              11E7  getLineInput
             161              1204  getLineInput.getChar
             17D              1220  getLineInput.glibspace
             1A6              1249  getLineInput.gliCheckCase
             1B5              1258  getLineInput.gliccStore
             1BE              1261  getLineInput.gliExtendedChar
             1C0              1263  getLineInput.gliExit
             1D0              1273  getLineInput.gliFull
             1DC              127F  ttyOutChar
             1E1              1284  ttyOutString
             1E9              128C  ttyIn
             1EE              1291  ttyClear
             207              12AA  executeExpression
             218              12BB  executeExpression.functionFinderLoop
             23C              12DF  executeExpression.functionFound
             250              12F3  executeExpression.exit
             251              12F4  executeExpression.variableAssignment
             294              1337  executeExpression.stringAssignment
             2B7              135A  executeExpression.syntaxError
             2C3              1366  executeExpression.typError
             2CF              1372  spaceSkip
             2D9              137C  spaceSkip.exit
             2DA              137D  getVarNameLength
             2E8              138B  getVarNameLength.search
             2FF              13A2  getVarNameLength.exit
             307              13AA  getVarType
             31E              13C1  getVarType.exit
             322              13C5  handleAlgebraicExpression
             32D              13D0  handleAlgebraicExpression.hae0
             338              13DB  handleAlgebraicExpression.hae1
             348              13EB  handleAlgebraicExpression.hae2
             353              13F6  handleAlgebraicExpression.relationals
             375              1418  handleAlgebraicExpression.parseAdditiveOperators
             389              142C  handleAlgebraicExpression.processAdd
             38F              1432  handleAlgebraicExpression.processMinus
             39A              143D  handleAlgebraicExpression.handleSecondLevelSkip
             39D              1440  handleAlgebraicExpression.handleSecondLevel
             3A2              1445  handleAlgebraicExpression.parseProductOperators
             3B8              145B  handleAlgebraicExpression.processDiv
             3CB              146E  handleAlgebraicExpression.handleThirdLevelSkip
             3CE              1471  handleAlgebraicExpression.handleThirdLevel
             3E4              1487  handleAlgebraicExpression.notBracket
             3E8              148B  handleAlgebraicExpression.varConstCheck
             3F9              149C  handleAlgebraicExpression.varOrRNDFound
             415              14B8  handleAlgebraicExpression.exit
             416              14B9  handleAlgebraicExpression.exponentFound
             418              14BB  handleAlgebraicExpression.varFound
             42F              14D2  handleAlgebraicExpression.closeBracket
             437              14DA  handleAlgebraicExpression.error
             443              14E6  getNumericVariable
             463              1506  getNumericVariable.exit
             467              150A  getNumericVariable.noVar
             46B              150E  getNumericVariable.stringFoundError
             477              151A  setNumericVariable
             497              153A  setNumericVariable.exit
             49B              153E  setNumericVariable.makeEditInteger
             4A2              1545  setNumericVariable.stringFoundError
             4AE              1551  setStringVariable
             4BB              155E  findOtherExpressionsOnLine
             4C4              1567  findOtherExpressionsOnLine.exit
             4C5              1568  funTbl
             51C              15BF  oldSchoolAssignemnt
             52C              15CF  newProgram
             580              1623  listProgram
             583              1626  runProgram
             586              1629  printStatement
             58C              162F  printStatement.printStart
             5A2              1645  printStatement.printExpr
             5BC              165F  printStatement.printStringVar
             5E9              168C  printStatement.stringPrint
             601              16A4  printStatement.psvexit
             60E              16B1  printStatement.closespeechmarks
             615              16B8  getInput
             618              16BB  handleIf
             61B              16BE  fancyJmp
             61E              16C1  returnToDOS
             621              16C4  forLoop
             624              16C7  cls
             629              16CC  dbgr
             62C              16CF  decimalToHex
             631              16D4  decimalToHex.processDigits
             64D              16F0  decimalToHex.exit
             654              16F7  printdecimalword
             684              1727  printdecimalword.pdw0
             694              1737  printdecimalword.pdw1
             6AD              1750  allocateBlock
             6DF              1782  allocateBlock.exit
             6E1              1784  allocateBlock.memoryFull
             6ED              1790  allocateBlock.firstAllocation
             70C              17AF  findVariable
             721              17C4  findVariable.search
             72D              17D0  findVariable.invalid
             73C              17DF  findVariable.varFound
             74B              17EE  findVariable.datFound
             75D              1800  findVariable.varNotFound
             767              180A  findVariable.exit
             76D              1810  findFirstLine
             77C              181F  searchForProgramLine
             78C              182F  searchForProgramLine.search
             79E              1841  searchForProgramLine.lineFound
             79F              1842  insertProgramLine
             7C2              1865  insertProgramLine.walk
             7D6              1879  insertProgramLine.candidate
             7E5              1888  insertProgramLine.sort
             7F8              189B  insertProgramLine.skipLink
             806              18A9  insertProgramLine.first
             818              18BB  insertProgramLine.exit
             81E              18C1  makeEditInteger
             831              18D4  makeEditInteger.newVar
             85D              1900  makeEditInteger.error
             869              190C  makeEditString
             8A3              1946  makeEditString.strcopy
             8B7              195A  makeEditString.error
             8C3              1966  terminatedstrcpy
             8C4              1967  terminatedstrcpy.copy
             8D4              1977  terminatedstrcpy.exit
             8D6              1979  strcpy
             8DF              1982  strlen
             8E3              1986  strlen.search
             8EA              198D  strlen.exit
             8ED              1990  memoryDetection
             8F6              1999  memoryDetection.findStartAddr
             8FD              19A0  memoryDetection.fsa1
             92D              19D0  memoryDetection.exit
             92E              19D1  memoryDetection.worstCase
             94F              19F2  prompt
             954              19F7  mainmsg
             968              1A0B  bytemsg
             976              1A19  crlf
             979              1A1C  errmsg
             981              1A24  numbers
             98B              1A2E  varChrs
             9B1              1A54  noMem
             9C1              1A64  syntax
             9D0              1A73  typeError
             9E0              1A83  lineNoXist

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             9F8              1A9B  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


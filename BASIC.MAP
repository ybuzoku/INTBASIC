
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               8B2  0000082F  progbits  resSeg
            1955               8B2               8B2  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 82F
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  8B2
align:                    1
follows:   resSeg
vstart:                1955
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000100  maxLineLen
00000030  digitStringLen
0000001C  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              B1              1154  mainLoop
              CD              1170  mainLoop.ml0
              DC              117F  mainLoop.ml1
              EB              118E  mainLoop.saveLine
             119              11BC  mainLoop.commonProc
             133              11D6  mainLoop.lineDoesntExist
             13A              11DD  criticalError
             144              11E7  getLineInput
             161              1204  getLineInput.getChar
             17D              1220  getLineInput.glibspace
             1A6              1249  getLineInput.gliCheckCase
             1B5              1258  getLineInput.gliccStore
             1BE              1261  getLineInput.gliExtendedChar
             1C0              1263  getLineInput.gliExit
             1D0              1273  getLineInput.gliFull
             1DC              127F  ttyOutChar
             1E1              1284  ttyOutString
             1E9              128C  ttyIn
             1EE              1291  ttyClear
             207              12AA  executeExpression
             218              12BB  executeExpression.functionFinderLoop
             23C              12DF  executeExpression.functionFound
             255              12F8  executeExpression.exit
             256              12F9  executeExpression.variableAssignment
             294              1337  executeExpression.exitError
             2A0              1343  executeExpression.stringAssignment
             2A0              1343  spaceSkip
             2AA              134D  spaceSkip.exit
             2AB              134E  getVarNameLength
             2B9              135C  getVarNameLength.search
             2D0              1373  getVarNameLength.exit
             2D8              137B  getVarType
             2F5              1398  handleAlgebraicExpression
             300              13A3  handleAlgebraicExpression.hae0
             30B              13AE  handleAlgebraicExpression.hae1
             31B              13BE  handleAlgebraicExpression.hae2
             326              13C9  handleAlgebraicExpression.relationals
             348              13EB  handleAlgebraicExpression.parseAdditiveOperators
             35C              13FF  handleAlgebraicExpression.processAdd
             362              1405  handleAlgebraicExpression.processMinus
             36D              1410  handleAlgebraicExpression.handleSecondLevelSkip
             370              1413  handleAlgebraicExpression.handleSecondLevel
             375              1418  handleAlgebraicExpression.parseProductOperators
             38B              142E  handleAlgebraicExpression.processDiv
             39E              1441  handleAlgebraicExpression.handleThirdLevelSkip
             3A1              1444  handleAlgebraicExpression.handleThirdLevel
             3B7              145A  handleAlgebraicExpression.notBracket
             3BB              145E  handleAlgebraicExpression.varConstCheck
             3CC              146F  handleAlgebraicExpression.varOrRNDFound
             3E4              1487  handleAlgebraicExpression.exit
             3E5              1488  handleAlgebraicExpression.exponentFound
             3E7              148A  handleAlgebraicExpression.varFound
             3FE              14A1  handleAlgebraicExpression.closeBracket
             406              14A9  handleAlgebraicExpression.error
             412              14B5  getNumericVariable
             432              14D5  getNumericVariable.exit
             436              14D9  getNumericVariable.noVar
             43A              14DD  getNumericVariable.stringFoundError
             446              14E9  setNumericVariable
             466              1509  setNumericVariable.exit
             46A              150D  setNumericVariable.makeEditInteger
             471              1514  setNumericVariable.stringFoundError
             47D              1520  findOtherExpressionsOnLine
             486              1529  findOtherExpressionsOnLine.exit
             487              152A  funTbl
             4CC              156F  newProgram
             520              15C3  listProgram
             523              15C6  runProgram
             526              15C9  printStatement
             52E              15D1  printStatement.stringPrint
             53A              15DD  getInput
             53D              15E0  handleIf
             540              15E3  fancyJmp
             543              15E6  returnToDOS
             546              15E9  forLoop
             549              15EC  cls
             54E              15F1  decimalToHex
             553              15F6  decimalToHex.processDigits
             56F              1612  decimalToHex.exit
             576              1619  printdecimalword
             5A6              1649  printdecimalword.pdw0
             5B6              1659  printdecimalword.pdw1
             5CF              1672  allocateBlock
             601              16A4  allocateBlock.memoryFull
             60C              16AF  allocateBlock.firstAllocation
             62B              16CE  findVariable
             640              16E3  findVariable.search
             646              16E9  findVariable.invalid
             655              16F8  findVariable.varFound
             660              1703  findVariable.varNotFound
             66A              170D  findVariable.exit
             670              1713  findFirstLine
             67F              1722  searchForProgramLine
             68F              1732  searchForProgramLine.search
             6A1              1744  searchForProgramLine.lineFound
             6A2              1745  insertProgramLine
             6C5              1768  insertProgramLine.walk
             6D9              177C  insertProgramLine.candidate
             6E8              178B  insertProgramLine.sort
             6FB              179E  insertProgramLine.skipLink
             709              17AC  insertProgramLine.first
             71B              17BE  insertProgramLine.exit
             721              17C4  makeEditVariable
             739              17DC  makeEditVariable.string
             73E              17E1  makeEditVariable.exit
             742              17E5  makeEditInteger
             755              17F8  makeEditInteger.newVar
             782              1825  makeEditInteger.error
             78E              1831  makeEditString
             79A              183D  strcpy
             7A3              1846  strlen
             7A7              184A  strlen.search
             7AE              1851  strlen.exit
             7B1              1854  memoryDetection
             7BA              185D  memoryDetection.findStartAddr
             7C1              1864  memoryDetection.fsa1
             7F1              1894  memoryDetection.exit
             7F2              1895  memoryDetection.worstCase
             813              18B6  prompt
             818              18BB  mainmsg
             82C              18CF  bytemsg
             83A              18DD  crlf
             83D              18E0  errmsg
             845              18E8  numbers
             84F              18F2  varChrs
             86B              190E  noMem
             87B              191E  syntax
             88A              192D  typeError
             89A              193D  lineNoXist

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             8B2              1955  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


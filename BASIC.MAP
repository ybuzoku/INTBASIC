
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               C9D  00000C1A  progbits  resSeg
            1D40               C9D               C9D  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 C1A
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  C9D
align:                    1
follows:   resSeg
vstart:                1D40
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000001  breakBit
00000002  traceBit
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              BF              1162  mainLoop
              E2              1185  mainLoop.ml0
              F6              1199  mainLoop.saveLine
             124              11C7  mainLoop.commonProc
             13E              11E1  mainLoop.lineDoesntExist
             145              11E8  criticalError
             14F              11F2  ctrlBreakHandler
             158              11FB  setHandler
             178              121B  getLineInput
             195              1238  getLineInput.getChar
             1B1              1254  getLineInput.glibspace
             1DA              127D  getLineInput.gliCheckCase
             1E9              128C  getLineInput.gliccStore
             1F2              1295  getLineInput.gliExtendedChar
             1F4              1297  getLineInput.gliExit
             204              12A7  getLineInput.gliFull
             210              12B3  ttyOutChar
             215              12B8  ttyOutString
             21D              12C0  ttyIn
             222              12C5  ttyClear
             23B              12DE  executeExpression
             24C              12EF  executeExpression.functionFinderLoop
             270              1313  executeExpression.functionFound
             284              1327  executeExpression.exit
             285              1328  executeExpression.variableAssignment
             2C8              136B  executeExpression.stringAssignment
             2EB              138E  executeExpression.syntaxError
             2F7              139A  executeExpression.typError
             303              13A6  mainProcessing
             315              13B8  mainProcessing.mp0
             32F              13D2  mainProcessing.tron
             34B              13EE  mainProcessing.break
             374              1417  spaceSkip
             37E              1421  spaceSkip.exit
             37F              1422  getVarNameLength
             38D              1430  getVarNameLength.search
             3A4              1447  getVarNameLength.exit
             3AC              144F  getVarType
             3C3              1466  getVarType.exit
             3C7              146A  handleAlgebraicExpression
             3D2              1475  handleAlgebraicExpression.hae0
             3DD              1480  handleAlgebraicExpression.hae1
             3ED              1490  handleAlgebraicExpression.hae2
             3F8              149B  handleAlgebraicExpression.relationals
             415              14B8  handleAlgebraicExpression.handleSecondLevel
             41A              14BD  handleAlgebraicExpression.parseAdditiveOperators
             42E              14D1  handleAlgebraicExpression.processAdd
             434              14D7  handleAlgebraicExpression.processMinus
             43F              14E2  handleAlgebraicExpression.handleFirstLevelSkip
             442              14E5  handleAlgebraicExpression.handleFirstLevel
             447              14EA  handleAlgebraicExpression.parseProductOperators
             45D              1500  handleAlgebraicExpression.processDiv
             470              1513  handleAlgebraicExpression.handleZerothLevelSkip
             473              1516  handleAlgebraicExpression.handleZerothLevel
             489              152C  handleAlgebraicExpression.notBracket
             48D              1530  handleAlgebraicExpression.varConstCheck
             49E              1541  handleAlgebraicExpression.varOrRNDFound
             4BA              155D  handleAlgebraicExpression.exit
             4BB              155E  handleAlgebraicExpression.exponentFound
             4BD              1560  handleAlgebraicExpression.varFound
             4D4              1577  handleAlgebraicExpression.closeBracket
             4DC              157F  handleAlgebraicExpression.error
             4E8              158B  getNumericVariable
             508              15AB  getNumericVariable.exit
             50C              15AF  getNumericVariable.noVar
             510              15B3  getNumericVariable.stringFoundError
             51C              15BF  setNumericVariable
             53C              15DF  setNumericVariable.exit
             540              15E3  setNumericVariable.makeEditInteger
             547              15EA  setNumericVariable.stringFoundError
             553              15F6  setStringVariable
             560              1603  findOtherExpressionsOnLine
             569              160C  findOtherExpressionsOnLine.exit
             56A              160D  funTbl
             5F6              1699  thenStr
             5FD              16A0  elseStr
             605              16A8  badCmd
             611              16B4  endProg
             616              16B9  tron
             61E              16C1  troff
             626              16C9  oldSchoolAssignemnt
             638              16DB  newProgram
             69A              173D  listProgram
             6A1              1744  listProgram.printLines
             6D5              1778  listProgram.exit
             6D6              1779  runProgram
             6E4              1787  runProgram.runLines
             706              17A9  runProgram.rl0
             70C              17AF  runProgram.exit
             711              17B4  printStatement
             719              17BC  printStatement.printStart
             72F              17D2  printStatement.printExpr
             732              17D5  printStatement.printExpr1
             743              17E6  printStatement.printStringVar
             770              1813  printStatement.stringPrint
             788              182B  printStatement.openSpeechMark
             78B              182E  printStatement.psvexitColon
             78E              1831  printStatement.psvexit
             79B              183E  printStatement.closespeechmarks
             7AD              1850  printStatement.continue
             7B7              185A  getInput
             7BA              185D  handleIf
             7EC              188F  handleIf.mp0
             7F7              189A  handleIf.else
             7FC              189F  handleIf.e0
             81C              18BF  handleIf.noElse0
             81F              18C2  handleIf.noElse
             820              18C3  handleIf.error
             82C              18CF  fancyJmp
             85A              18FD  fancyJmp.unknownLineNumber
             86B              190E  forLoop
             86E              1911  returnToDOS
             87A              191D  cls
             87F              1922  dbgr
             89F              1942  dbgr.farReturn
             8C8              196B  decimalToHex
             8CD              1970  decimalToHex.processDigits
             8E9              198C  decimalToHex.exit
             8F0              1993  printdecimalword
             920              19C3  printdecimalword.pdw0
             930              19D3  printdecimalword.pdw1
             949              19EC  allocateBlock
             94A              19ED  allocateBlock.ab0
             97B              1A1E  allocateBlock.exit
             97D              1A20  allocateBlock.memoryFull
             989              1A2C  allocateBlock.firstAllocation
             9A9              1A4C  findVariable
             9BE              1A61  findVariable.search
             9CA              1A6D  findVariable.invalid
             9D9              1A7C  findVariable.varFound
             9E8              1A8B  findVariable.datFound
             9FA              1A9D  findVariable.varNotFound
             A04              1AA7  findVariable.exit
             A0A              1AAD  findFirstLine
             A19              1ABC  searchForProgramLine
             A29              1ACC  searchForProgramLine.search
             A3C              1ADF  searchForProgramLine.lineFound
             A3D              1AE0  insertProgramLine
             A5D              1B00  insertProgramLine.walk
             A71              1B14  insertProgramLine.candidate
             A80              1B23  insertProgramLine.sort
             A93              1B36  insertProgramLine.skipLink
             AA1              1B44  insertProgramLine.first
             AB3              1B56  insertProgramLine.exit
             AB9              1B5C  makeEditInteger
             ACC              1B6F  makeEditInteger.newVar
             AF8              1B9B  makeEditInteger.error
             B04              1BA7  makeEditString
             B3E              1BE1  makeEditString.strcopy
             B52              1BF5  makeEditString.error
             B5E              1C01  terminatedstrcpy
             B5F              1C02  terminatedstrcpy.copy
             B6F              1C12  terminatedstrcpy.exit
             B71              1C14  strcpy
             B7A              1C1D  strlen
             B7E              1C21  strlen.search
             B85              1C28  strlen.exit
             B88              1C2B  memoryDetection
             B91              1C34  memoryDetection.findStartAddr
             B98              1C3B  memoryDetection.fsa1
             BC8              1C6B  memoryDetection.exit
             BC9              1C6C  memoryDetection.worstCase
             BEA              1C8D  prompt
             BEF              1C92  mainmsg
             C03              1CA6  bytemsg
             C11              1CB4  crlf
             C14              1CB7  errmsg
             C1C              1CBF  numbers
             C26              1CC9  varChrs
             C4C              1CEF  noMem
             C5C              1CFF  syntax
             C6B              1D0E  typeError
             C7B              1D1E  lineNoXist
             C93              1D36  breakmsg

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             C9D              1D40  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


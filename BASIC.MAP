
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               A9D  00000A1A  progbits  resSeg
            1B40               A9D               A9D  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 A1A
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  A9D
align:                    1
follows:   resSeg
vstart:                1B40
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              BF              1162  mainLoop
              DB              117E  mainLoop.ml0
              EA              118D  mainLoop.ml1
              F9              119C  mainLoop.saveLine
             127              11CA  mainLoop.commonProc
             141              11E4  mainLoop.lineDoesntExist
             148              11EB  criticalError
             152              11F5  ctrlBreakHandler
             15B              11FE  setHandler
             17B              121E  getLineInput
             198              123B  getLineInput.getChar
             1B4              1257  getLineInput.glibspace
             1DD              1280  getLineInput.gliCheckCase
             1EC              128F  getLineInput.gliccStore
             1F5              1298  getLineInput.gliExtendedChar
             1F7              129A  getLineInput.gliExit
             207              12AA  getLineInput.gliFull
             213              12B6  ttyOutChar
             218              12BB  ttyOutString
             220              12C3  ttyIn
             225              12C8  ttyClear
             23E              12E1  executeExpression
             24F              12F2  executeExpression.functionFinderLoop
             273              1316  executeExpression.functionFound
             287              132A  executeExpression.exit
             288              132B  executeExpression.variableAssignment
             2CB              136E  executeExpression.stringAssignment
             2EE              1391  executeExpression.syntaxError
             2FA              139D  executeExpression.typError
             306              13A9  spaceSkip
             310              13B3  spaceSkip.exit
             311              13B4  getVarNameLength
             31F              13C2  getVarNameLength.search
             336              13D9  getVarNameLength.exit
             33E              13E1  getVarType
             355              13F8  getVarType.exit
             359              13FC  handleAlgebraicExpression
             364              1407  handleAlgebraicExpression.hae0
             36F              1412  handleAlgebraicExpression.hae1
             37F              1422  handleAlgebraicExpression.hae2
             38A              142D  handleAlgebraicExpression.relationals
             3A7              144A  handleAlgebraicExpression.handleSecondLevel
             3AC              144F  handleAlgebraicExpression.parseAdditiveOperators
             3C0              1463  handleAlgebraicExpression.processAdd
             3C6              1469  handleAlgebraicExpression.processMinus
             3D1              1474  handleAlgebraicExpression.handleFirstLevelSkip
             3D4              1477  handleAlgebraicExpression.handleFirstLevel
             3D9              147C  handleAlgebraicExpression.parseProductOperators
             3EF              1492  handleAlgebraicExpression.processDiv
             402              14A5  handleAlgebraicExpression.handleZerothLevelSkip
             405              14A8  handleAlgebraicExpression.handleZerothLevel
             41B              14BE  handleAlgebraicExpression.notBracket
             41F              14C2  handleAlgebraicExpression.varConstCheck
             430              14D3  handleAlgebraicExpression.varOrRNDFound
             44C              14EF  handleAlgebraicExpression.exit
             44D              14F0  handleAlgebraicExpression.exponentFound
             44F              14F2  handleAlgebraicExpression.varFound
             466              1509  handleAlgebraicExpression.closeBracket
             46E              1511  handleAlgebraicExpression.error
             47A              151D  getNumericVariable
             49A              153D  getNumericVariable.exit
             49E              1541  getNumericVariable.noVar
             4A2              1545  getNumericVariable.stringFoundError
             4AE              1551  setNumericVariable
             4CE              1571  setNumericVariable.exit
             4D2              1575  setNumericVariable.makeEditInteger
             4D9              157C  setNumericVariable.stringFoundError
             4E5              1588  setStringVariable
             4F2              1595  findOtherExpressionsOnLine
             4FB              159E  findOtherExpressionsOnLine.exit
             4FC              159F  funTbl
             553              15F6  oldSchoolAssignemnt
             563              1606  newProgram
             5C5              1668  listProgram
             5C8              166B  runProgram
             5CB              166E  printStatement
             5D1              1674  printStatement.printStart
             5E7              168A  printStatement.printExpr
             5EA              168D  printStatement.printExpr1
             601              16A4  printStatement.printStringVar
             62E              16D1  printStatement.stringPrint
             646              16E9  printStatement.psvexit
             653              16F6  printStatement.closespeechmarks
             65A              16FD  printStatement.continue
             662              1705  getInput
             665              1708  handleIf
             668              170B  fancyJmp
             66B              170E  forLoop
             66E              1711  returnToDOS
             67A              171D  cls
             67F              1722  dbgr
             69F              1742  dbgr.farReturn
             6C8              176B  decimalToHex
             6CD              1770  decimalToHex.processDigits
             6E9              178C  decimalToHex.exit
             6F0              1793  printdecimalword
             720              17C3  printdecimalword.pdw0
             730              17D3  printdecimalword.pdw1
             749              17EC  allocateBlock
             74A              17ED  allocateBlock.ab0
             77B              181E  allocateBlock.exit
             77D              1820  allocateBlock.memoryFull
             789              182C  allocateBlock.firstAllocation
             7A9              184C  findVariable
             7BE              1861  findVariable.search
             7CA              186D  findVariable.invalid
             7D9              187C  findVariable.varFound
             7E8              188B  findVariable.datFound
             7FA              189D  findVariable.varNotFound
             804              18A7  findVariable.exit
             80A              18AD  findFirstLine
             819              18BC  searchForProgramLine
             829              18CC  searchForProgramLine.search
             83C              18DF  searchForProgramLine.lineFound
             83D              18E0  insertProgramLine
             85D              1900  insertProgramLine.walk
             871              1914  insertProgramLine.candidate
             880              1923  insertProgramLine.sort
             893              1936  insertProgramLine.skipLink
             8A1              1944  insertProgramLine.first
             8B3              1956  insertProgramLine.exit
             8B9              195C  makeEditInteger
             8CC              196F  makeEditInteger.newVar
             8F8              199B  makeEditInteger.error
             904              19A7  makeEditString
             93E              19E1  makeEditString.strcopy
             952              19F5  makeEditString.error
             95E              1A01  terminatedstrcpy
             95F              1A02  terminatedstrcpy.copy
             96F              1A12  terminatedstrcpy.exit
             971              1A14  strcpy
             97A              1A1D  strlen
             97E              1A21  strlen.search
             985              1A28  strlen.exit
             988              1A2B  memoryDetection
             991              1A34  memoryDetection.findStartAddr
             998              1A3B  memoryDetection.fsa1
             9C8              1A6B  memoryDetection.exit
             9C9              1A6C  memoryDetection.worstCase
             9EA              1A8D  prompt
             9EF              1A92  mainmsg
             A03              1AA6  bytemsg
             A11              1AB4  crlf
             A14              1AB7  errmsg
             A1C              1ABF  numbers
             A26              1AC9  varChrs
             A4C              1AEF  noMem
             A5C              1AFF  syntax
             A6B              1B0E  typeError
             A7B              1B1E  lineNoXist
             A93              1B36  breakmsg

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             A9D              1B40  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen


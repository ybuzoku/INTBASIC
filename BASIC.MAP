
- NASM Map file ---------------------------------------------------------------

Source file:  BASIC.ASM
Output file:  BASIC.BIN

-- Program origin -------------------------------------------------------------

00000000

-- Sections (summary) ---------------------------------------------------------

Vstart            Start             Stop              Length    Class     Name
               0                 0                83  00000083  progbits  .text
            1126                83               CDC  00000C59  progbits  resSeg
            1D7F               CDC               CDC  00000000  progbits  programArea
               0                 0              1126  00001126  nobits    dSeg

-- Sections (detailed) --------------------------------------------------------

---- Section .text ------------------------------------------------------------

class:     progbits
length:                  83
start:                    0
align:                    1
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

---- Section resSeg -----------------------------------------------------------

class:     progbits
length:                 C59
start:                   83
align:                    1
follows:   .text
vstart:                1126
valign:                   1
vfollows:  dSeg

---- Section programArea ------------------------------------------------------

class:     progbits
length:                   0
start:                  CDC
align:                    1
follows:   resSeg
vstart:                1D7F
valign:                   1
vfollows:  resSeg

---- Section dSeg -------------------------------------------------------------

class:     nobits
length:                1126
start:                    0
align:     not defined
follows:   not defined
vstart:                   0
valign:    not defined
vfollows:  not defined

-- Symbols --------------------------------------------------------------------

---- No Section ---------------------------------------------------------------

Value     Name
00000000  progLineBlockType
00000001  varBlockType
00000002  datBlockType
00000074  notLastMemBlock
00000072  lastMemBlock
00000000  memBlock
00000000  memBlock.bSignature
00000001  memBlock.wBlockSize
00000003  memBlock.bBlockType
00000004  memBlock_size
00000000  progLineBlock
00000000  progLineBlock.bSignature
00000001  progLineBlock.wBlockSize
00000003  progLineBlock.bBlockType
00000004  progLineBlock.wLineNum
00000006  progLineBlock.qPtr
0000000E  progLineBlock.sLine
0000010E  progLineBlock_size
00000000  varBlock
00000000  varBlock.bSignature
00000001  varBlock.wBlockSize
00000003  varBlock.bBlockType
00000004  varBlock.qValue
0000000C  varBlock.sVarName
0000000C  varBlock_size
00000000  stringBlock
00000000  stringBlock.bSignature
00000001  stringBlock.wBlockSize
00000003  stringBlock.bBlockType
00000004  stringBlock.string
00000104  stringBlock.sVarName
00000104  stringBlock_size
00000000  intEquate
00000001  strEquate
00000001  breakBit
00000002  traceBit
00000003  indirectBit
00000100  maxLineLen
00000030  digitStringLen
00000026  numVarChars


---- Section .text ------------------------------------------------------------

Real              Virtual           Name
              39                39  bad
              4D                4D  badmsg

---- Section resSeg -----------------------------------------------------------

Real              Virtual           Name
              83              1126  start
              BF              1162  mainLoop
              E2              1185  mainLoop.ml0
              FD              11A0  mainLoop.saveLine
             12B              11CE  mainLoop.commonProc
             145              11E8  mainLoop.lineDoesntExist
             14C              11EF  criticalError
             156              11F9  ctrlBreakHandler
             15F              1202  setHandler
             17F              1222  getLineInput
             19C              123F  getLineInput.getChar
             1B8              125B  getLineInput.glibspace
             1E1              1284  getLineInput.gliCheckCase
             1F0              1293  getLineInput.gliccStore
             1F9              129C  getLineInput.gliExtendedChar
             1FB              129E  getLineInput.gliExit
             20B              12AE  getLineInput.gliFull
             217              12BA  ttyOutChar
             21C              12BF  ttyOutString
             224              12C7  ttyIn
             229              12CC  ttyClear
             242              12E5  executeExpression
             253              12F6  executeExpression.functionFinderLoop
             277              131A  executeExpression.functionFound
             28F              1332  executeExpression.runFunction
             291              1334  executeExpression.exit
             29C              133F  executeExpression.notLetVarAssignment
             2A5              1348  mainProcessor
             2B7              135A  mainProcessor.mp0
             2BC              135F  mainProcessor.mp1
             2C6              1369  mainProcessor.tron
             2EB              138E  mainProcessor.break
             314              13B7  spaceSkip
             31E              13C1  spaceSkip.exit
             31F              13C2  getVarNameLength
             32D              13D0  getVarNameLength.search
             344              13E7  getVarNameLength.exit
             34C              13EF  getVarType
             363              1406  getVarType.exit
             367              140A  handleAlgebraicExpression
             372              1415  handleAlgebraicExpression.hae0
             37D              1420  handleAlgebraicExpression.hae1
             38D              1430  handleAlgebraicExpression.hae2
             398              143B  handleAlgebraicExpression.relationals
             3B5              1458  handleAlgebraicExpression.handleSecondLevel
             3BA              145D  handleAlgebraicExpression.parseAdditiveOperators
             3CE              1471  handleAlgebraicExpression.processAdd
             3D4              1477  handleAlgebraicExpression.processMinus
             3DF              1482  handleAlgebraicExpression.handleFirstLevelSkip
             3E2              1485  handleAlgebraicExpression.handleFirstLevel
             3E7              148A  handleAlgebraicExpression.parseProductOperators
             3FD              14A0  handleAlgebraicExpression.processDiv
             410              14B3  handleAlgebraicExpression.handleZerothLevelSkip
             413              14B6  handleAlgebraicExpression.handleZerothLevel
             429              14CC  handleAlgebraicExpression.notBracket
             42D              14D0  handleAlgebraicExpression.varConstCheck
             43E              14E1  handleAlgebraicExpression.varOrRNDFound
             45A              14FD  handleAlgebraicExpression.exit
             45B              14FE  handleAlgebraicExpression.exponentFound
             45D              1500  handleAlgebraicExpression.varFound
             474              1517  handleAlgebraicExpression.closeBracket
             47C              151F  handleAlgebraicExpression.error
             488              152B  getNumericVariable
             4A8              154B  getNumericVariable.exit
             4AC              154F  getNumericVariable.noVar
             4B0              1553  getNumericVariable.stringFoundError
             4BC              155F  setNumericVariable
             4DC              157F  setNumericVariable.exit
             4E0              1583  setNumericVariable.makeEditInteger
             4E7              158A  setNumericVariable.stringFoundError
             4F3              1596  setStringVariable
             500              15A3  findOtherExpressionsOnLine
             509              15AC  findOtherExpressionsOnLine.exit
             50A              15AD  funTbl
             596              1639  thenStr
             59D              1640  elseStr
             5C3              1666  badCmd
             5CF              1672  endProg
             5D4              1677  tron
             5DC              167F  troff
             5E4              1687  memRead
             5E4              1687  memWrite
             5E4              1687  byteRead
             5E4              1687  byteWrite
             5E5              1688  oldSchoolAssignemnt
             5EA              168D  variableAssignment
             62D              16D0  variableAssignment.stringAssignment
             650              16F3  variableAssignment.syntaxError
             65C              16FF  variableAssignment.typError
             668              170B  newProgram
             6CA              176D  listProgram
             6D1              1774  listProgram.printLines
             705              17A8  listProgram.exit
             706              17A9  runProgram
             706              17A9  printStatement
             706              17A9  printStatement.printStart
             71C              17BF  printStatement.printExpr
             71F              17C2  printStatement.printExpr1
             730              17D3  printStatement.printStringVar
             75D              1800  printStatement.stringPrint
             775              1818  printStatement.openSpeechMark
             778              181B  printStatement.psvexitColon
             77B              181E  printStatement.psvexit
             788              182B  printStatement.closespeechmarks
             797              183A  printStatement.continue
             7A1              1844  getInput
             7AB              184E  getInput.customPrompt
             7AE              1851  getInput.cp0
             7B7              185A  getInput.error
             7C3              1866  getInput.printCustomPrompt
             7C6              1869  getInput.pcp0
             7D2              1875  getInput.stopPrompt
             7E0              1883  getInput.defaultPrompt
             7EA              188D  getInput.noDefaultPrompt
             825              18C8  getInput.handleNumeric
             833              18D6  getInput.handleString
             83F              18E2  handleIf
             869              190C  handleIf.hi0
             86A              190D  handleIf.else
             870              1913  handleIf.noElse0
             870              1913  handleIf.noElse
             871              1914  handleIf.error
             87D              1920  goto
             899              193C  goto.unknownLineNumber
             8AA              194D  forLoop
             8AD              1950  returnToDOS
             8B9              195C  cls
             8BE              1961  dbgr
             8DE              1981  dbgr.farReturn
             907              19AA  decimalToHex
             90C              19AF  decimalToHex.processDigits
             928              19CB  decimalToHex.exit
             92F              19D2  printdecimalword
             95F              1A02  printdecimalword.pdw0
             96F              1A12  printdecimalword.pdw1
             988              1A2B  allocateBlock
             989              1A2C  allocateBlock.ab0
             9BA              1A5D  allocateBlock.exit
             9BC              1A5F  allocateBlock.memoryFull
             9C8              1A6B  allocateBlock.firstAllocation
             9E8              1A8B  findVariable
             9FD              1AA0  findVariable.search
             A09              1AAC  findVariable.invalid
             A18              1ABB  findVariable.varFound
             A27              1ACA  findVariable.datFound
             A39              1ADC  findVariable.varNotFound
             A43              1AE6  findVariable.exit
             A49              1AEC  findFirstLine
             A58              1AFB  searchForProgramLine
             A68              1B0B  searchForProgramLine.search
             A7B              1B1E  searchForProgramLine.lineFound
             A7C              1B1F  insertProgramLine
             A9C              1B3F  insertProgramLine.walk
             AB0              1B53  insertProgramLine.candidate
             ABF              1B62  insertProgramLine.sort
             AD2              1B75  insertProgramLine.skipLink
             AE0              1B83  insertProgramLine.first
             AF2              1B95  insertProgramLine.exit
             AF8              1B9B  makeEditInteger
             B0B              1BAE  makeEditInteger.newVar
             B37              1BDA  makeEditInteger.error
             B43              1BE6  makeEditString
             B7D              1C20  makeEditString.strcopy
             B91              1C34  makeEditString.error
             B9D              1C40  terminatedstrcpy
             B9E              1C41  terminatedstrcpy.copy
             BAE              1C51  terminatedstrcpy.exit
             BB0              1C53  strcpy
             BB9              1C5C  strlen
             BBD              1C60  strlen.search
             BC4              1C67  strlen.exit
             BC7              1C6A  memoryDetection
             BD0              1C73  memoryDetection.findStartAddr
             BD7              1C7A  memoryDetection.fsa1
             C07              1CAA  memoryDetection.exit
             C08              1CAB  memoryDetection.worstCase
             C29              1CCC  prompt
             C2E              1CD1  mainmsg
             C42              1CE5  bytemsg
             C50              1CF3  crlf
             C53              1CF6  errmsg
             C5B              1CFE  numbers
             C65              1D08  varChrs
             C8B              1D2E  noMem
             C9B              1D3E  syntax
             CAA              1D4D  typeError
             CBA              1D5D  lineNoXist
             CD2              1D75  breakmsg

---- Section programArea ------------------------------------------------------

Real              Virtual           Name
             CDC              1D7F  ENDOFPROGRAM

---- Section dSeg -------------------------------------------------------------

Real              Virtual           Name
               0                 0  stack
             FC0               FC0  stacktop
             FC8               FC8  inString
            10C8              10C8  digitString
            10F8              10F8  minMemAddr
            1100              1100  maxMemAddr
            1108              1108  strLen
            1109              1109  stateByte
            110A              110A  mcbChain
            1112              1112  lastBlock
            111A              111A  firstLinPtr
            1122              1122  firstLinNum
            1124              1124  currentLine
            1126              1126  bssLen

